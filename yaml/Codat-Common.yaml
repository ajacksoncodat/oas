openapi: 3.1.0
x-stoplight:
  id: 466k6ayziv9at
servers:
  - description: Production
    url: 'https://api.codat.io'
info:
  title: Common API
  version: 2.1.0
  summary: Common API
  description: |-
    An API for the common components of all of Codat's products.

    These end points cover creating and managing your companies, data connections, and integrations.

    [Read about the building blocks of Codat...](https://docs.codat.io/core-concepts/companies)

    [See our OpenAPI spec](https://github.com/codatio/oas) 
  contact:
    name: Codat
    email: support@codat.io
  termsOfService: 'https://www.codat.io/legals/'
security:
  - auth_header: []
tags:
  - name: Companies
    description: Create and manage your Codat companies.
  - name: Connections
    description: Manage your companies' data connections.
  - name: Migrations
    description: Migrate existing connections into Codat.
  - name: Webhooks
    description: 'Manage webhooks, rules and alerts.'
  - name: Data status
    description: Understand the state of data within Codat.
  - name: Integrations
    description: View and manage your available integrations in Codat.
  - name: Refresh data
    description: Queue pull operations to refresh data in Codat.
  - name: Settings
    description: Manage your Codat instance.
  - name: Push data
    description: View push options and get push statuses.
paths:
  /companies:
    get:
      summary: List companies
      tags:
        - Companies
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: Companies
                x-speakeasy-name-override: Companies
                x-internal: true
                allOf:
                  - type: object
                    properties:
                      results:
                        type: array
                        items:
                          title: Company
                          description: 'A company in Codat represent a small or medium sized business, whose data you wish to share'
                          type: object
                          properties:
                            id:
                              type: string
                              format: uuid
                              example: 8a210b68-6988-11ed-a1eb-0242ac120002
                              description: Unique identifier for your SMB in Codat.
                            name:
                              type: string
                              description: The name of the company
                              example: Codat Ltd.
                            description:
                              type: string
                              description: 'Additional information about the company. This can be used to store foreign IDs, references, etc.'
                            platform:
                              type: string
                              deprecated: true
                              example: Xero
                            redirect:
                              type: string
                              format: uri
                              description: 'The `redirect` [Link URL](https://docs.codat.io/auth-flow/authorize-hosted-link) enabling the customer to start their auth flow journey for the company.'
                              example: 'https://link.codat.io/company/27628208-459c-46a2-a705-5641ce25f739'
                            lastSync:
                              type: string
                              example: '2022-10-23T00:00:00Z'
                              description: "In Codat's data model, dates and times are represented using the <a class=\"external\" href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\">ISO 8601 standard</a>. Date and time fields are formatted as strings; for example:\n\n```\n2020-10-08T22:40:50Z\n2021-01-01T00:00:00\n```\n\n\n\nWhen syncing data that contains `DateTime` fields from Codat, make sure you support the following cases when reading time information:\n\n- Coordinated Universal Time (UTC): `2021-11-15T06:00:00Z`\n- Unqualified local time: `2021-11-15T01:00:00`\n- UTC time offsets: `2021-11-15T01:00:00-05:00`\n\n> \U0001F4D8 Time zones\n> \n> Not all dates from Codat will contain information about time zones.  \n> Where it is not available from the underlying platform, Codat will return these as times local to the business whose data has been synced."
                              title: DateTime
                            created:
                              type: string
                              example: '2022-10-23T00:00:00Z'
                              description: "In Codat's data model, dates and times are represented using the <a class=\"external\" href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\">ISO 8601 standard</a>. Date and time fields are formatted as strings; for example:\n\n```\n2020-10-08T22:40:50Z\n2021-01-01T00:00:00\n```\n\n\n\nWhen syncing data that contains `DateTime` fields from Codat, make sure you support the following cases when reading time information:\n\n- Coordinated Universal Time (UTC): `2021-11-15T06:00:00Z`\n- Unqualified local time: `2021-11-15T01:00:00`\n- UTC time offsets: `2021-11-15T01:00:00-05:00`\n\n> \U0001F4D8 Time zones\n> \n> Not all dates from Codat will contain information about time zones.  \n> Where it is not available from the underlying platform, Codat will return these as times local to the business whose data has been synced."
                              title: DateTime
                            createdByUserName:
                              type: string
                            dataConnections:
                              type: array
                              items:
                                title: Connection
                                description: A connection represents the link between a `company` and a source of data.
                                type: object
                                properties:
                                  id:
                                    type: string
                                    format: uuid
                                    example: 2e9d2c44-f675-40ba-8049-353bfcb5e171
                                    description: Unique identifier for a company's data connection.
                                  integrationId:
                                    type: string
                                    format: uuid
                                    example: fd321cb6-7963-4506-b873-e99593a45e30
                                    description: A Codat ID representing the integration.
                                  integrationKey:
                                    type: string
                                    description: A unique four-character ID that identifies the platform of the company's data connection. This ensures continuity if the platform changes its name in the future.
                                  sourceId:
                                    type: string
                                    format: uuid
                                    example: 35b92968-9851-4095-ad60-395c95cbcba4
                                    description: 'A source-specific ID used to distinguish between different sources originating from the same data connection. In general, a data connection is a single data source. However, for TrueLayer, `sourceId` is associated with a specific bank and has a many-to-one relationship with the `integrationId`.'
                                  sourceType:
                                    title: Source Type
                                    description: The type of platform of the connection.
                                    type: string
                                    enum:
                                      - Accounting
                                      - Banking
                                      - Commerce
                                      - Other
                                      - Unknown
                                    example: Accounting
                                  platformName:
                                    type: string
                                  linkUrl:
                                    type: string
                                    format: uri
                                    example: 'https://link-api.codat.io/companies/86bd88cb-44ab-4dfb-b32f-87b19b14287f/connections/2e2eb431-c1fa-4dc9-93fa-d29781c12bcd/start'
                                  status:
                                    title: Data connection status
                                    description: The current authorization status of the data connection.
                                    type: string
                                    enum:
                                      - PendingAuth
                                      - Linked
                                      - Unlinked
                                      - Deauthorized
                                  lastSync:
                                    type: string
                                    example: '2022-10-23T00:00:00Z'
                                    description: "In Codat's data model, dates and times are represented using the <a class=\"external\" href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\">ISO 8601 standard</a>. Date and time fields are formatted as strings; for example:\n\n```\n2020-10-08T22:40:50Z\n2021-01-01T00:00:00\n```\n\n\n\nWhen syncing data that contains `DateTime` fields from Codat, make sure you support the following cases when reading time information:\n\n- Coordinated Universal Time (UTC): `2021-11-15T06:00:00Z`\n- Unqualified local time: `2021-11-15T01:00:00`\n- UTC time offsets: `2021-11-15T01:00:00-05:00`\n\n> \U0001F4D8 Time zones\n> \n> Not all dates from Codat will contain information about time zones.  \n> Where it is not available from the underlying platform, Codat will return these as times local to the business whose data has been synced."
                                    title: DateTime
                                  created:
                                    type: string
                                    example: '2022-10-23T00:00:00Z'
                                    description: "In Codat's data model, dates and times are represented using the <a class=\"external\" href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\">ISO 8601 standard</a>. Date and time fields are formatted as strings; for example:\n\n```\n2020-10-08T22:40:50Z\n2021-01-01T00:00:00\n```\n\n\n\nWhen syncing data that contains `DateTime` fields from Codat, make sure you support the following cases when reading time information:\n\n- Coordinated Universal Time (UTC): `2021-11-15T06:00:00Z`\n- Unqualified local time: `2021-11-15T01:00:00`\n- UTC time offsets: `2021-11-15T01:00:00-05:00`\n\n> \U0001F4D8 Time zones\n> \n> Not all dates from Codat will contain information about time zones.  \n> Where it is not available from the underlying platform, Codat will return these as times local to the business whose data has been synced."
                                    title: DateTime
                                  dataConnectionErrors:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        statusCode:
                                          type: string
                                        statusText:
                                          type: string
                                        errorMessage:
                                          type: string
                                        erroredOnUtc:
                                          type: string
                                          example: '2022-10-23T00:00:00Z'
                                          description: "In Codat's data model, dates and times are represented using the <a class=\"external\" href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\">ISO 8601 standard</a>. Date and time fields are formatted as strings; for example:\n\n```\n2020-10-08T22:40:50Z\n2021-01-01T00:00:00\n```\n\n\n\nWhen syncing data that contains `DateTime` fields from Codat, make sure you support the following cases when reading time information:\n\n- Coordinated Universal Time (UTC): `2021-11-15T06:00:00Z`\n- Unqualified local time: `2021-11-15T01:00:00`\n- UTC time offsets: `2021-11-15T01:00:00-05:00`\n\n> \U0001F4D8 Time zones\n> \n> Not all dates from Codat will contain information about time zones.  \n> Where it is not available from the underlying platform, Codat will return these as times local to the business whose data has been synced."
                                          title: DateTime
                                  connectionInfo:
                                    type: object
                                    properties:
                                      additionalProp1:
                                        type: string
                                      additionalProp2:
                                        type: string
                                      additionalProp3:
                                        type: string
                                required:
                                  - id
                                  - integrationId
                                  - integrationKey
                                  - sourceId
                                  - platformName
                                  - linkUrl
                                  - status
                                  - created
                                  - sourceType
                                example:
                                  id: ee2eb431-c0fa-4dc9-93fa-d29781c12bcd
                                  integrationId: bf083d72-62c7-493e-aec9-81b4dbba7e2c
                                  integrationKey: dfxm
                                  sourceId: bdd831ce-eebd-4896-89a7-20e5ee8989ee
                                  platformName: Basiq
                                  linkUrl: 'https://link-api.codat.io/companies/86bd88cb-44ab-4dfb-b32f-87b19b14287f/connections/ee2eb431-c0fa-4dc9-93fa-d29781c12bcd/start'
                                  status: Linked
                                  lastSync: '2022-10-27T10:22:43.6464237Z'
                                  created: '2022-10-27T09:53:29Z'
                                  sourceType: Banking
                          required:
                            - id
                            - name
                            - redirect
                          examples:
                            - id: 0498e921-9b53-4396-a412-4f2f5983b0a2
                              name: string
                              platform: string
                              redirect: 'https://link.codat.io/company/27628208-459c-46a2-a705-5641ce25f739'
                              lastSync: '2022-01-01T12:00:00.000Z'
                              created: '2022-01-01T12:00:00.000Z'
                              createdByUserName: string
                              dataConnections:
                                - id: ee2eb431-c0fa-4dc9-93fa-d29781c12bcd
                                  integrationId: bf083d72-62c7-493e-aec9-81b4dbba7e2c
                                  integrationKey: dfxm
                                  sourceId: bdd831ce-eebd-4896-89a7-20e5ee8989ee
                                  platformName: Basiq
                                  linkUrl: 'https://link-api.codat.io/companies/86bd88cb-44ab-4dfb-b32f-87b19b14287f/connections/ee2eb431-c0fa-4dc9-93fa-d29781c12bcd/start'
                                  status: Linked
                                  lastSync: '2022-10-27T10:22:43.6464237Z'
                                  created: '2022-10-27T09:53:29Z'
                                  sourceType: Banking
                  - type: object
                    properties:
                      pageNumber:
                        type: integer
                      pageSize:
                        type: integer
                      totalResults:
                        type: integer
                      _links:
                        type: object
                        required:
                          - self
                          - current
                        properties:
                          self:
                            title: Hypertext reference
                            type: object
                            properties:
                              href:
                                type: string
                                format: uri-reference
                          current:
                            title: Hypertext reference
                            type: object
                            properties:
                              href:
                                type: string
                                format: uri-reference
                          next:
                            title: Hypertext reference
                            type: object
                            properties:
                              href:
                                type: string
                                format: uri-reference
                          previous:
                            title: Hypertext reference
                            type: object
                            properties:
                              href:
                                type: string
                                format: uri-reference
                        examples:
                          - self:
                              href: '/companies/{id}/data/{dataType}'
                            current:
                              href: '/companies/{id}/data/{dataType}?page=1&pageSize=10'
                    required:
                      - pageNumber
                      - pageSize
                      - totalResults
                      - _links
                    examples:
                      - _links:
                          pageNumber: 1
                          pageSize: 10
                          totalResults: 1
                          self:
                            href: '/companies/{id}/data/{dataType}'
                          current:
                            href: '/companies/{id}/data/{dataType}?page=1&pageSize=10'
              examples:
                One company:
                  value:
                    results:
                      - id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                        name: My Test Company
                        description: My Test Company make testing software
                        platform: ''
                        redirect: 'https://link.codat.io/company/3fa85f64-5717-4562-b3fc-2c963f66afa6'
                        lastSync: '2022-01-01T12:30:00.000Z'
                        dataConnections:
                          - id: 51baa045-4836-4317-a42e-3542e991e581
                            integrationId: 1c312d69-e638-46d4-ad31-72e6c3ba8390
                            integrationKey: vjms
                            sourceId: 396c3158-5dd7-481b-a7c4-a795ca31792b
                            platformName: Pandle
                            linkUrl: 'https://link-api.codat.io/companies/3fa85f64-5717-4562-b3fc-2c963f66afa6/connections/51baa045-4836-4317-a42e-3542e991e581/start'
                            status: Linked
                            lastSync: '2022-01-01T12:30:00.000Z'
                            created: '2022-01-01T11:30:00Z'
                            sourceType: Accounting
                        created: '2022-01-01T11:30:00Z'
                        createdByUserName: Mike Smith
                    pageNumber: 1
                    pageSize: 100
                    totalResults: 1
                    _links:
                      current:
                        href: /companies?page=1&pageSize=100
                      self:
                        href: /companies
                List of Companies:
                  value:
                    results:
                      - id: d1568dde-adf6-11ed-afa1-0242ac120002
                        name: Technicalium
                        description: 'Technology services, including web and app design and development'
                        platform: ''
                        redirect: 'https://link.codat.io/company/d1568dde-adf6-11ed-afa1-0242ac120002'
                        lastSync: '2022-01-01T12:30:00.000Z'
                        dataConnections:
                          - id: 51baa045-4836-4317-a42e-3542e991e581
                            integrationId: 1c312d69-e638-46d4-ad31-72e6c3ba8390
                            integrationKey: vjms
                            sourceId: 396c3158-5dd7-481b-a7c4-a795ca31792b
                            platformName: Pandle
                            linkUrl: 'https://link-api.codat.io/companies/d1568dde-adf6-11ed-afa1-0242ac120002/connections/51baa045-4836-4317-a42e-3542e991e581/start'
                            status: Linked
                            lastSync: '2022-01-01T12:30:00.000Z'
                            created: '2022-01-01T11:30:00Z'
                            sourceType: Accounting
                        created: '2022-01-01T11:30:00Z'
                        createdByUserName: Joe Bloggs
                      - id: 096db70b-78de-4ff0-aa98-299cb5fe17a0
                        name: Godata
                        description: A new digital agency with a passion for creating amazing digital experiences
                        platform: ''
                        redirect: 'https://link.codat.io/company/096db70b-78de-4ff0-aa98-299cb5fe17a0'
                        lastSync: '2022-01-01T12:30:00.000Z'
                        dataConnections:
                          - id: a70bc148-dc21-46b2-a257-d9c58ac15cbb
                            integrationId: 1c312d69-e638-46d4-ad31-72e6c3ba8390
                            integrationKey: vjms
                            sourceId: 396c3158-5dd7-481b-a7c4-a795ca31792b
                            platformName: Pandle
                            linkUrl: 'https://link-api.codat.io/companies/096db70b-78de-4ff0-aa98-299cb5fe17a0/connections/a70bc148-dc21-46b2-a257-d9c58ac15cbb/start'
                            status: Linked
                            lastSync: '2022-01-01T12:30:00.000Z'
                            created: '2022-01-01T11:30:00Z'
                            sourceType: Accounting
                        created: '2022-01-01T11:30:00Z'
                        createdByUserName: Mike Smith
                    pageNumber: 1
                    pageSize: 100
                    totalResults: 2
                    _links:
                      current:
                        href: /companies?page=1&pageSize=100
                      self:
                        href: /companies
        '400':
          description: Your `query` parameter was not correctly formed
          content:
            application/json:
              schema:
                title: Malformed-Query
                type: object
                properties:
                  statusCode:
                    type: integer
                  service:
                    type: string
                  error:
                    type: string
                  correlationId:
                    type: string
                  canBeRetried:
                    type: string
                  detailedErrorCode:
                    type: integer
                x-examples:
                  example-1:
                    statusCode: 400
                    service: ClientsApi
                    error: Error parsing query - Malformed query.
                    correlationId: bc997528a9d7abb9161ef45f05d38599
                    canBeRetried: Unknown
                    detailedErrorCode: 0
              examples:
                example-1:
                  value:
                    statusCode: 400
                    service: ClientsApi
                    error: Error parsing query - Malformed query.
                    correlationId: bc997528a9d7abb9161ef45f05d38599
                    canBeRetried: Unknown
                    detailedErrorCode: 0
        '401':
          description: Your API request was not properly authorized.
          content:
            application/json:
              schema:
                title: Unauthorized
                type: object
                properties:
                  statusCode:
                    type: integer
                  service:
                    type: string
                  error:
                    type: string
                  correlationId:
                    type: string
                  canBeRetried:
                    type: string
                  detailedErrorCode:
                    type: integer
                x-examples:
                  example-1:
                    statusCode: 401
                    service: PublicApi
                    error: Unauthorized
                    correlationId: 7eb40d6b415d7bcd99ce658268284056
                    canBeRetried: Unknown
                    detailedErrorCode: 0
              examples:
                example-1:
                  value:
                    statusCode: 401
                    service: PublicApi
                    error: Unauthorized
                    correlationId: 7eb40d6b415d7bcd99ce658268284056
                    canBeRetried: Unknown
                    detailedErrorCode: 0
      operationId: list-companies
      description: List all companies that you have created in Codat.
      parameters:
        - name: page
          in: query
          required: true
          schema:
            type: integer
            format: int32
            minimum: 0
            example: 1
            default: 1
          description: 'Page number. [Read more](https://docs.codat.io/using-the-api/paging).'
          x-stoplight:
            id: 1318joqblpp4e
        - name: pageSize
          in: query
          schema:
            type: integer
            format: int32
            default: 100
            example: 100
            minimum: 1
            maximum: 5000
          description: 'Number of records to return in a page. [Read more](https://docs.codat.io/using-the-api/paging).'
          x-stoplight:
            id: s2ika6rltk5y6
        - name: query
          in: query
          required: false
          schema:
            type: string
          description: 'Codat query string. [Read more](https://docs.codat.io/using-the-api/querying).'
          x-stoplight:
            id: gupdb9kt30hfq
        - name: orderBy
          in: query
          required: false
          schema:
            type: string
            example: '-modifiedDate'
          description: 'Field to order results by. [Read more](https://docs.codat.io/using-the-api/ordering-results).'
          x-stoplight:
            id: 4je9lwo02netu
    post:
      summary: Create company
      tags:
        - Companies
      operationId: create-company
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  description:
                    type: string
                  platform:
                    type: string
                  redirect:
                    type: string
                  dataConnections:
                    type: array
                    items:
                      type: object
                      properties: {}
                  created:
                    type: string
                  createdByUserName:
                    type: string
                x-examples:
                  example-1:
                    id: ab12c58d-a678-4ebf-a159-ae99e1807bd0
                    name: My First Company
                    description: ''
                    platform: ''
                    redirect: 'https://link.codat.io/company/ab12c58d-a678-4ebf-a159-ae99e1807bd0'
                    dataConnections: []
                    created: '2022-11-10T10:45:18.1950523Z'
                    createdByUserName: Dan Tzabar
        '401':
          description: Your API request was not properly authorized.
          content:
            application/json:
              schema:
                title: Unauthorized
                type: object
                properties:
                  statusCode:
                    type: integer
                  service:
                    type: string
                  error:
                    type: string
                  correlationId:
                    type: string
                  canBeRetried:
                    type: string
                  detailedErrorCode:
                    type: integer
                x-examples:
                  example-1:
                    statusCode: 401
                    service: PublicApi
                    error: Unauthorized
                    correlationId: 7eb40d6b415d7bcd99ce658268284056
                    canBeRetried: Unknown
                    detailedErrorCode: 0
              examples:
                example-1:
                  value:
                    statusCode: 401
                    service: PublicApi
                    error: Unauthorized
                    correlationId: 7eb40d6b415d7bcd99ce658268284056
                    canBeRetried: Unknown
                    detailedErrorCode: 0
      description: Create a new company
      requestBody:
        content:
          application/json:
            schema:
              type: object
              x-examples:
                example-1:
                  name: string
                  description: string
              properties:
                name:
                  type: string
                description:
                  type: string
              required:
                - name
            examples:
              Example with no description:
                value:
                  name: Technicalium
                  description: ''
              Example with a description:
                value:
                  name: Technicalium
                  description: 'Technology services, including web and app design and development'
  '/companies/{companyId}':
    parameters:
      - name: companyId
        in: path
        required: true
        schema:
          type: string
          format: uuid
          example: 8a210b68-6988-11ed-a1eb-0242ac120002
          description: Unique identifier for your SMB in Codat.
    get:
      summary: Get company
      operationId: get-company
      description: Get metadata for a single company
      tags:
        - Companies
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: Company
                description: 'A company in Codat represent a small or medium sized business, whose data you wish to share'
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                    example: 8a210b68-6988-11ed-a1eb-0242ac120002
                    description: Unique identifier for your SMB in Codat.
                  name:
                    type: string
                    description: The name of the company
                    example: Codat Ltd.
                  description:
                    type: string
                    description: 'Additional information about the company. This can be used to store foreign IDs, references, etc.'
                  platform:
                    type: string
                    deprecated: true
                    example: Xero
                  redirect:
                    type: string
                    format: uri
                    description: 'The `redirect` [Link URL](https://docs.codat.io/auth-flow/authorize-hosted-link) enabling the customer to start their auth flow journey for the company.'
                    example: 'https://link.codat.io/company/27628208-459c-46a2-a705-5641ce25f739'
                  lastSync:
                    type: string
                    example: '2022-10-23T00:00:00Z'
                    description: "In Codat's data model, dates and times are represented using the <a class=\"external\" href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\">ISO 8601 standard</a>. Date and time fields are formatted as strings; for example:\n\n```\n2020-10-08T22:40:50Z\n2021-01-01T00:00:00\n```\n\n\n\nWhen syncing data that contains `DateTime` fields from Codat, make sure you support the following cases when reading time information:\n\n- Coordinated Universal Time (UTC): `2021-11-15T06:00:00Z`\n- Unqualified local time: `2021-11-15T01:00:00`\n- UTC time offsets: `2021-11-15T01:00:00-05:00`\n\n> \U0001F4D8 Time zones\n> \n> Not all dates from Codat will contain information about time zones.  \n> Where it is not available from the underlying platform, Codat will return these as times local to the business whose data has been synced."
                    title: DateTime
                  created:
                    type: string
                    example: '2022-10-23T00:00:00Z'
                    description: "In Codat's data model, dates and times are represented using the <a class=\"external\" href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\">ISO 8601 standard</a>. Date and time fields are formatted as strings; for example:\n\n```\n2020-10-08T22:40:50Z\n2021-01-01T00:00:00\n```\n\n\n\nWhen syncing data that contains `DateTime` fields from Codat, make sure you support the following cases when reading time information:\n\n- Coordinated Universal Time (UTC): `2021-11-15T06:00:00Z`\n- Unqualified local time: `2021-11-15T01:00:00`\n- UTC time offsets: `2021-11-15T01:00:00-05:00`\n\n> \U0001F4D8 Time zones\n> \n> Not all dates from Codat will contain information about time zones.  \n> Where it is not available from the underlying platform, Codat will return these as times local to the business whose data has been synced."
                    title: DateTime
                  createdByUserName:
                    type: string
                  dataConnections:
                    type: array
                    items:
                      title: Connection
                      description: A connection represents the link between a `company` and a source of data.
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                          example: 2e9d2c44-f675-40ba-8049-353bfcb5e171
                          description: Unique identifier for a company's data connection.
                        integrationId:
                          type: string
                          format: uuid
                          example: fd321cb6-7963-4506-b873-e99593a45e30
                          description: A Codat ID representing the integration.
                        integrationKey:
                          type: string
                          description: A unique four-character ID that identifies the platform of the company's data connection. This ensures continuity if the platform changes its name in the future.
                        sourceId:
                          type: string
                          format: uuid
                          example: 35b92968-9851-4095-ad60-395c95cbcba4
                          description: 'A source-specific ID used to distinguish between different sources originating from the same data connection. In general, a data connection is a single data source. However, for TrueLayer, `sourceId` is associated with a specific bank and has a many-to-one relationship with the `integrationId`.'
                        sourceType:
                          title: Source Type
                          description: The type of platform of the connection.
                          type: string
                          enum:
                            - Accounting
                            - Banking
                            - Commerce
                            - Other
                            - Unknown
                          example: Accounting
                        platformName:
                          type: string
                        linkUrl:
                          type: string
                          format: uri
                          example: 'https://link-api.codat.io/companies/86bd88cb-44ab-4dfb-b32f-87b19b14287f/connections/2e2eb431-c1fa-4dc9-93fa-d29781c12bcd/start'
                        status:
                          title: Data connection status
                          description: The current authorization status of the data connection.
                          type: string
                          enum:
                            - PendingAuth
                            - Linked
                            - Unlinked
                            - Deauthorized
                        lastSync:
                          type: string
                          example: '2022-10-23T00:00:00Z'
                          description: "In Codat's data model, dates and times are represented using the <a class=\"external\" href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\">ISO 8601 standard</a>. Date and time fields are formatted as strings; for example:\n\n```\n2020-10-08T22:40:50Z\n2021-01-01T00:00:00\n```\n\n\n\nWhen syncing data that contains `DateTime` fields from Codat, make sure you support the following cases when reading time information:\n\n- Coordinated Universal Time (UTC): `2021-11-15T06:00:00Z`\n- Unqualified local time: `2021-11-15T01:00:00`\n- UTC time offsets: `2021-11-15T01:00:00-05:00`\n\n> \U0001F4D8 Time zones\n> \n> Not all dates from Codat will contain information about time zones.  \n> Where it is not available from the underlying platform, Codat will return these as times local to the business whose data has been synced."
                          title: DateTime
                        created:
                          type: string
                          example: '2022-10-23T00:00:00Z'
                          description: "In Codat's data model, dates and times are represented using the <a class=\"external\" href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\">ISO 8601 standard</a>. Date and time fields are formatted as strings; for example:\n\n```\n2020-10-08T22:40:50Z\n2021-01-01T00:00:00\n```\n\n\n\nWhen syncing data that contains `DateTime` fields from Codat, make sure you support the following cases when reading time information:\n\n- Coordinated Universal Time (UTC): `2021-11-15T06:00:00Z`\n- Unqualified local time: `2021-11-15T01:00:00`\n- UTC time offsets: `2021-11-15T01:00:00-05:00`\n\n> \U0001F4D8 Time zones\n> \n> Not all dates from Codat will contain information about time zones.  \n> Where it is not available from the underlying platform, Codat will return these as times local to the business whose data has been synced."
                          title: DateTime
                        dataConnectionErrors:
                          type: array
                          items:
                            type: object
                            properties:
                              statusCode:
                                type: string
                              statusText:
                                type: string
                              errorMessage:
                                type: string
                              erroredOnUtc:
                                type: string
                                example: '2022-10-23T00:00:00Z'
                                description: "In Codat's data model, dates and times are represented using the <a class=\"external\" href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\">ISO 8601 standard</a>. Date and time fields are formatted as strings; for example:\n\n```\n2020-10-08T22:40:50Z\n2021-01-01T00:00:00\n```\n\n\n\nWhen syncing data that contains `DateTime` fields from Codat, make sure you support the following cases when reading time information:\n\n- Coordinated Universal Time (UTC): `2021-11-15T06:00:00Z`\n- Unqualified local time: `2021-11-15T01:00:00`\n- UTC time offsets: `2021-11-15T01:00:00-05:00`\n\n> \U0001F4D8 Time zones\n> \n> Not all dates from Codat will contain information about time zones.  \n> Where it is not available from the underlying platform, Codat will return these as times local to the business whose data has been synced."
                                title: DateTime
                        connectionInfo:
                          type: object
                          properties:
                            additionalProp1:
                              type: string
                            additionalProp2:
                              type: string
                            additionalProp3:
                              type: string
                      required:
                        - id
                        - integrationId
                        - integrationKey
                        - sourceId
                        - platformName
                        - linkUrl
                        - status
                        - created
                        - sourceType
                      example:
                        id: ee2eb431-c0fa-4dc9-93fa-d29781c12bcd
                        integrationId: bf083d72-62c7-493e-aec9-81b4dbba7e2c
                        integrationKey: dfxm
                        sourceId: bdd831ce-eebd-4896-89a7-20e5ee8989ee
                        platformName: Basiq
                        linkUrl: 'https://link-api.codat.io/companies/86bd88cb-44ab-4dfb-b32f-87b19b14287f/connections/ee2eb431-c0fa-4dc9-93fa-d29781c12bcd/start'
                        status: Linked
                        lastSync: '2022-10-27T10:22:43.6464237Z'
                        created: '2022-10-27T09:53:29Z'
                        sourceType: Banking
                required:
                  - id
                  - name
                  - redirect
                examples:
                  - id: 0498e921-9b53-4396-a412-4f2f5983b0a2
                    name: string
                    platform: string
                    redirect: 'https://link.codat.io/company/27628208-459c-46a2-a705-5641ce25f739'
                    lastSync: '2022-01-01T12:00:00.000Z'
                    created: '2022-01-01T12:00:00.000Z'
                    createdByUserName: string
                    dataConnections:
                      - id: ee2eb431-c0fa-4dc9-93fa-d29781c12bcd
                        integrationId: bf083d72-62c7-493e-aec9-81b4dbba7e2c
                        integrationKey: dfxm
                        sourceId: bdd831ce-eebd-4896-89a7-20e5ee8989ee
                        platformName: Basiq
                        linkUrl: 'https://link-api.codat.io/companies/86bd88cb-44ab-4dfb-b32f-87b19b14287f/connections/ee2eb431-c0fa-4dc9-93fa-d29781c12bcd/start'
                        status: Linked
                        lastSync: '2022-10-27T10:22:43.6464237Z'
                        created: '2022-10-27T09:53:29Z'
                        sourceType: Banking
              examples:
                Example:
                  value:
                    id: ab12c58d-a678-4ebf-a159-ae99e1807bd0
                    name: My First Company
                    description: ''
                    platform: ''
                    redirect: 'https://link.codat.io/company/ab12c58d-a678-4ebf-a159-ae99e1807bd0'
                    dataConnections: []
                    created: '2022-11-10T10:45:18Z'
                    createdByUserName: Dan Tzabar
        '401':
          description: Your API request was not properly authorized.
          content:
            application/json:
              schema:
                title: Unauthorized
                type: object
                properties:
                  statusCode:
                    type: integer
                  service:
                    type: string
                  error:
                    type: string
                  correlationId:
                    type: string
                  canBeRetried:
                    type: string
                  detailedErrorCode:
                    type: integer
                x-examples:
                  example-1:
                    statusCode: 401
                    service: PublicApi
                    error: Unauthorized
                    correlationId: 7eb40d6b415d7bcd99ce658268284056
                    canBeRetried: Unknown
                    detailedErrorCode: 0
              examples:
                example-1:
                  value:
                    statusCode: 401
                    service: PublicApi
                    error: Unauthorized
                    correlationId: 7eb40d6b415d7bcd99ce658268284056
                    canBeRetried: Unknown
                    detailedErrorCode: 0
    delete:
      summary: Delete a company
      operationId: delete-company
      description: |-
        Delete the given company from Codat.
        This operation is not reversible.
      tags:
        - Companies
      responses:
        '204':
          description: No Content
        '401':
          description: Your API request was not properly authorized.
          content:
            application/json:
              schema:
                title: Unauthorized
                type: object
                properties:
                  statusCode:
                    type: integer
                  service:
                    type: string
                  error:
                    type: string
                  correlationId:
                    type: string
                  canBeRetried:
                    type: string
                  detailedErrorCode:
                    type: integer
                x-examples:
                  example-1:
                    statusCode: 401
                    service: PublicApi
                    error: Unauthorized
                    correlationId: 7eb40d6b415d7bcd99ce658268284056
                    canBeRetried: Unknown
                    detailedErrorCode: 0
              examples:
                example-1:
                  value:
                    statusCode: 401
                    service: PublicApi
                    error: Unauthorized
                    correlationId: 7eb40d6b415d7bcd99ce658268284056
                    canBeRetried: Unknown
                    detailedErrorCode: 0
    put:
      summary: Update company
      description: Updates the given company with a new name and description
      operationId: update-company
      tags:
        - Companies
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: Company
                description: 'A company in Codat represent a small or medium sized business, whose data you wish to share'
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                    example: 8a210b68-6988-11ed-a1eb-0242ac120002
                    description: Unique identifier for your SMB in Codat.
                  name:
                    type: string
                    description: The name of the company
                    example: Codat Ltd.
                  description:
                    type: string
                    description: 'Additional information about the company. This can be used to store foreign IDs, references, etc.'
                  platform:
                    type: string
                    deprecated: true
                    example: Xero
                  redirect:
                    type: string
                    format: uri
                    description: 'The `redirect` [Link URL](https://docs.codat.io/auth-flow/authorize-hosted-link) enabling the customer to start their auth flow journey for the company.'
                    example: 'https://link.codat.io/company/27628208-459c-46a2-a705-5641ce25f739'
                  lastSync:
                    type: string
                    example: '2022-10-23T00:00:00Z'
                    description: "In Codat's data model, dates and times are represented using the <a class=\"external\" href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\">ISO 8601 standard</a>. Date and time fields are formatted as strings; for example:\n\n```\n2020-10-08T22:40:50Z\n2021-01-01T00:00:00\n```\n\n\n\nWhen syncing data that contains `DateTime` fields from Codat, make sure you support the following cases when reading time information:\n\n- Coordinated Universal Time (UTC): `2021-11-15T06:00:00Z`\n- Unqualified local time: `2021-11-15T01:00:00`\n- UTC time offsets: `2021-11-15T01:00:00-05:00`\n\n> \U0001F4D8 Time zones\n> \n> Not all dates from Codat will contain information about time zones.  \n> Where it is not available from the underlying platform, Codat will return these as times local to the business whose data has been synced."
                    title: DateTime
                  created:
                    type: string
                    example: '2022-10-23T00:00:00Z'
                    description: "In Codat's data model, dates and times are represented using the <a class=\"external\" href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\">ISO 8601 standard</a>. Date and time fields are formatted as strings; for example:\n\n```\n2020-10-08T22:40:50Z\n2021-01-01T00:00:00\n```\n\n\n\nWhen syncing data that contains `DateTime` fields from Codat, make sure you support the following cases when reading time information:\n\n- Coordinated Universal Time (UTC): `2021-11-15T06:00:00Z`\n- Unqualified local time: `2021-11-15T01:00:00`\n- UTC time offsets: `2021-11-15T01:00:00-05:00`\n\n> \U0001F4D8 Time zones\n> \n> Not all dates from Codat will contain information about time zones.  \n> Where it is not available from the underlying platform, Codat will return these as times local to the business whose data has been synced."
                    title: DateTime
                  createdByUserName:
                    type: string
                  dataConnections:
                    type: array
                    items:
                      title: Connection
                      description: A connection represents the link between a `company` and a source of data.
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                          example: 2e9d2c44-f675-40ba-8049-353bfcb5e171
                          description: Unique identifier for a company's data connection.
                        integrationId:
                          type: string
                          format: uuid
                          example: fd321cb6-7963-4506-b873-e99593a45e30
                          description: A Codat ID representing the integration.
                        integrationKey:
                          type: string
                          description: A unique four-character ID that identifies the platform of the company's data connection. This ensures continuity if the platform changes its name in the future.
                        sourceId:
                          type: string
                          format: uuid
                          example: 35b92968-9851-4095-ad60-395c95cbcba4
                          description: 'A source-specific ID used to distinguish between different sources originating from the same data connection. In general, a data connection is a single data source. However, for TrueLayer, `sourceId` is associated with a specific bank and has a many-to-one relationship with the `integrationId`.'
                        sourceType:
                          title: Source Type
                          description: The type of platform of the connection.
                          type: string
                          enum:
                            - Accounting
                            - Banking
                            - Commerce
                            - Other
                            - Unknown
                          example: Accounting
                        platformName:
                          type: string
                        linkUrl:
                          type: string
                          format: uri
                          example: 'https://link-api.codat.io/companies/86bd88cb-44ab-4dfb-b32f-87b19b14287f/connections/2e2eb431-c1fa-4dc9-93fa-d29781c12bcd/start'
                        status:
                          title: Data connection status
                          description: The current authorization status of the data connection.
                          type: string
                          enum:
                            - PendingAuth
                            - Linked
                            - Unlinked
                            - Deauthorized
                        lastSync:
                          type: string
                          example: '2022-10-23T00:00:00Z'
                          description: "In Codat's data model, dates and times are represented using the <a class=\"external\" href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\">ISO 8601 standard</a>. Date and time fields are formatted as strings; for example:\n\n```\n2020-10-08T22:40:50Z\n2021-01-01T00:00:00\n```\n\n\n\nWhen syncing data that contains `DateTime` fields from Codat, make sure you support the following cases when reading time information:\n\n- Coordinated Universal Time (UTC): `2021-11-15T06:00:00Z`\n- Unqualified local time: `2021-11-15T01:00:00`\n- UTC time offsets: `2021-11-15T01:00:00-05:00`\n\n> \U0001F4D8 Time zones\n> \n> Not all dates from Codat will contain information about time zones.  \n> Where it is not available from the underlying platform, Codat will return these as times local to the business whose data has been synced."
                          title: DateTime
                        created:
                          type: string
                          example: '2022-10-23T00:00:00Z'
                          description: "In Codat's data model, dates and times are represented using the <a class=\"external\" href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\">ISO 8601 standard</a>. Date and time fields are formatted as strings; for example:\n\n```\n2020-10-08T22:40:50Z\n2021-01-01T00:00:00\n```\n\n\n\nWhen syncing data that contains `DateTime` fields from Codat, make sure you support the following cases when reading time information:\n\n- Coordinated Universal Time (UTC): `2021-11-15T06:00:00Z`\n- Unqualified local time: `2021-11-15T01:00:00`\n- UTC time offsets: `2021-11-15T01:00:00-05:00`\n\n> \U0001F4D8 Time zones\n> \n> Not all dates from Codat will contain information about time zones.  \n> Where it is not available from the underlying platform, Codat will return these as times local to the business whose data has been synced."
                          title: DateTime
                        dataConnectionErrors:
                          type: array
                          items:
                            type: object
                            properties:
                              statusCode:
                                type: string
                              statusText:
                                type: string
                              errorMessage:
                                type: string
                              erroredOnUtc:
                                type: string
                                example: '2022-10-23T00:00:00Z'
                                description: "In Codat's data model, dates and times are represented using the <a class=\"external\" href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\">ISO 8601 standard</a>. Date and time fields are formatted as strings; for example:\n\n```\n2020-10-08T22:40:50Z\n2021-01-01T00:00:00\n```\n\n\n\nWhen syncing data that contains `DateTime` fields from Codat, make sure you support the following cases when reading time information:\n\n- Coordinated Universal Time (UTC): `2021-11-15T06:00:00Z`\n- Unqualified local time: `2021-11-15T01:00:00`\n- UTC time offsets: `2021-11-15T01:00:00-05:00`\n\n> \U0001F4D8 Time zones\n> \n> Not all dates from Codat will contain information about time zones.  \n> Where it is not available from the underlying platform, Codat will return these as times local to the business whose data has been synced."
                                title: DateTime
                        connectionInfo:
                          type: object
                          properties:
                            additionalProp1:
                              type: string
                            additionalProp2:
                              type: string
                            additionalProp3:
                              type: string
                      required:
                        - id
                        - integrationId
                        - integrationKey
                        - sourceId
                        - platformName
                        - linkUrl
                        - status
                        - created
                        - sourceType
                      example:
                        id: ee2eb431-c0fa-4dc9-93fa-d29781c12bcd
                        integrationId: bf083d72-62c7-493e-aec9-81b4dbba7e2c
                        integrationKey: dfxm
                        sourceId: bdd831ce-eebd-4896-89a7-20e5ee8989ee
                        platformName: Basiq
                        linkUrl: 'https://link-api.codat.io/companies/86bd88cb-44ab-4dfb-b32f-87b19b14287f/connections/ee2eb431-c0fa-4dc9-93fa-d29781c12bcd/start'
                        status: Linked
                        lastSync: '2022-10-27T10:22:43.6464237Z'
                        created: '2022-10-27T09:53:29Z'
                        sourceType: Banking
                required:
                  - id
                  - name
                  - redirect
                examples:
                  - id: 0498e921-9b53-4396-a412-4f2f5983b0a2
                    name: string
                    platform: string
                    redirect: 'https://link.codat.io/company/27628208-459c-46a2-a705-5641ce25f739'
                    lastSync: '2022-01-01T12:00:00.000Z'
                    created: '2022-01-01T12:00:00.000Z'
                    createdByUserName: string
                    dataConnections:
                      - id: ee2eb431-c0fa-4dc9-93fa-d29781c12bcd
                        integrationId: bf083d72-62c7-493e-aec9-81b4dbba7e2c
                        integrationKey: dfxm
                        sourceId: bdd831ce-eebd-4896-89a7-20e5ee8989ee
                        platformName: Basiq
                        linkUrl: 'https://link-api.codat.io/companies/86bd88cb-44ab-4dfb-b32f-87b19b14287f/connections/ee2eb431-c0fa-4dc9-93fa-d29781c12bcd/start'
                        status: Linked
                        lastSync: '2022-10-27T10:22:43.6464237Z'
                        created: '2022-10-27T09:53:29Z'
                        sourceType: Banking
        '401':
          description: Your API request was not properly authorized.
          content:
            application/json:
              schema:
                title: Unauthorized
                type: object
                properties:
                  statusCode:
                    type: integer
                  service:
                    type: string
                  error:
                    type: string
                  correlationId:
                    type: string
                  canBeRetried:
                    type: string
                  detailedErrorCode:
                    type: integer
                x-examples:
                  example-1:
                    statusCode: 401
                    service: PublicApi
                    error: Unauthorized
                    correlationId: 7eb40d6b415d7bcd99ce658268284056
                    canBeRetried: Unknown
                    detailedErrorCode: 0
              examples:
                example-1:
                  value:
                    statusCode: 401
                    service: PublicApi
                    error: Unauthorized
                    correlationId: 7eb40d6b415d7bcd99ce658268284056
                    canBeRetried: Unknown
                    detailedErrorCode: 0
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
              x-examples:
                example-1:
                  name: foo
            examples:
              example-1:
                value:
                  name: New Name
  '/companies/{companyId}/connections':
    parameters:
      - name: companyId
        in: path
        required: true
        schema:
          type: string
          format: uuid
          example: 8a210b68-6988-11ed-a1eb-0242ac120002
          description: Unique identifier for your SMB in Codat.
    get:
      summary: List connections
      description: List the connections for a company
      operationId: list-company-connections
      tags:
        - Connections
      parameters:
        - name: page
          in: query
          required: true
          schema:
            type: integer
            format: int32
            minimum: 0
            example: 1
            default: 1
          description: 'Page number. [Read more](https://docs.codat.io/using-the-api/paging).'
          x-stoplight:
            id: 1318joqblpp4e
        - name: pageSize
          in: query
          schema:
            type: integer
            format: int32
            default: 100
            example: 100
            minimum: 1
            maximum: 5000
          description: 'Number of records to return in a page. [Read more](https://docs.codat.io/using-the-api/paging).'
          x-stoplight:
            id: s2ika6rltk5y6
        - name: query
          in: query
          required: false
          schema:
            type: string
          description: 'Codat query string. [Read more](https://docs.codat.io/using-the-api/querying).'
          x-stoplight:
            id: gupdb9kt30hfq
        - name: orderBy
          in: query
          required: false
          schema:
            type: string
            example: '-modifiedDate'
          description: 'Field to order results by. [Read more](https://docs.codat.io/using-the-api/ordering-results).'
          x-stoplight:
            id: 4je9lwo02netu
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                x-examples:
                  example-1:
                    results:
                      - id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                        integrationId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                        integrationKey: string
                        sourceId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                        platformName: string
                        linkUrl: string
                        status: string
                        lastSync: '2022-11-10T11:42:26.059Z'
                        created: '2022-11-10T11:42:26.059Z'
                        sourceType: string
                        dataConnectionErrors:
                          - statusCode: string
                            statusText: string
                            errorMessage: string
                            erroredOnUtc: '2022-11-10T11:42:26.059Z'
                        connectionInfo:
                          additionalProp1: string
                          additionalProp2: string
                          additionalProp3: string
                    pageNumber: 0
                    pageSize: 0
                    totalResults: 0
                    _links:
                      self:
                        href: string
                      current:
                        href: string
                      next:
                        href: string
                      previous:
                        href: string
                title: Connections
                x-speakeasy-name-override: Connections
                x-internal: true
                type: object
                properties:
                  results:
                    type: array
                    items:
                      title: Connection
                      description: A connection represents the link between a `company` and a source of data.
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                          example: 2e9d2c44-f675-40ba-8049-353bfcb5e171
                          description: Unique identifier for a company's data connection.
                        integrationId:
                          type: string
                          format: uuid
                          example: fd321cb6-7963-4506-b873-e99593a45e30
                          description: A Codat ID representing the integration.
                        integrationKey:
                          type: string
                          description: A unique four-character ID that identifies the platform of the company's data connection. This ensures continuity if the platform changes its name in the future.
                        sourceId:
                          type: string
                          format: uuid
                          example: 35b92968-9851-4095-ad60-395c95cbcba4
                          description: 'A source-specific ID used to distinguish between different sources originating from the same data connection. In general, a data connection is a single data source. However, for TrueLayer, `sourceId` is associated with a specific bank and has a many-to-one relationship with the `integrationId`.'
                        sourceType:
                          title: Source Type
                          description: The type of platform of the connection.
                          type: string
                          enum:
                            - Accounting
                            - Banking
                            - Commerce
                            - Other
                            - Unknown
                          example: Accounting
                        platformName:
                          type: string
                        linkUrl:
                          type: string
                          format: uri
                          example: 'https://link-api.codat.io/companies/86bd88cb-44ab-4dfb-b32f-87b19b14287f/connections/2e2eb431-c1fa-4dc9-93fa-d29781c12bcd/start'
                        status:
                          title: Data connection status
                          description: The current authorization status of the data connection.
                          type: string
                          enum:
                            - PendingAuth
                            - Linked
                            - Unlinked
                            - Deauthorized
                        lastSync:
                          type: string
                          example: '2022-10-23T00:00:00Z'
                          description: "In Codat's data model, dates and times are represented using the <a class=\"external\" href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\">ISO 8601 standard</a>. Date and time fields are formatted as strings; for example:\n\n```\n2020-10-08T22:40:50Z\n2021-01-01T00:00:00\n```\n\n\n\nWhen syncing data that contains `DateTime` fields from Codat, make sure you support the following cases when reading time information:\n\n- Coordinated Universal Time (UTC): `2021-11-15T06:00:00Z`\n- Unqualified local time: `2021-11-15T01:00:00`\n- UTC time offsets: `2021-11-15T01:00:00-05:00`\n\n> \U0001F4D8 Time zones\n> \n> Not all dates from Codat will contain information about time zones.  \n> Where it is not available from the underlying platform, Codat will return these as times local to the business whose data has been synced."
                          title: DateTime
                        created:
                          type: string
                          example: '2022-10-23T00:00:00Z'
                          description: "In Codat's data model, dates and times are represented using the <a class=\"external\" href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\">ISO 8601 standard</a>. Date and time fields are formatted as strings; for example:\n\n```\n2020-10-08T22:40:50Z\n2021-01-01T00:00:00\n```\n\n\n\nWhen syncing data that contains `DateTime` fields from Codat, make sure you support the following cases when reading time information:\n\n- Coordinated Universal Time (UTC): `2021-11-15T06:00:00Z`\n- Unqualified local time: `2021-11-15T01:00:00`\n- UTC time offsets: `2021-11-15T01:00:00-05:00`\n\n> \U0001F4D8 Time zones\n> \n> Not all dates from Codat will contain information about time zones.  \n> Where it is not available from the underlying platform, Codat will return these as times local to the business whose data has been synced."
                          title: DateTime
                        dataConnectionErrors:
                          type: array
                          items:
                            type: object
                            properties:
                              statusCode:
                                type: string
                              statusText:
                                type: string
                              errorMessage:
                                type: string
                              erroredOnUtc:
                                type: string
                                example: '2022-10-23T00:00:00Z'
                                description: "In Codat's data model, dates and times are represented using the <a class=\"external\" href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\">ISO 8601 standard</a>. Date and time fields are formatted as strings; for example:\n\n```\n2020-10-08T22:40:50Z\n2021-01-01T00:00:00\n```\n\n\n\nWhen syncing data that contains `DateTime` fields from Codat, make sure you support the following cases when reading time information:\n\n- Coordinated Universal Time (UTC): `2021-11-15T06:00:00Z`\n- Unqualified local time: `2021-11-15T01:00:00`\n- UTC time offsets: `2021-11-15T01:00:00-05:00`\n\n> \U0001F4D8 Time zones\n> \n> Not all dates from Codat will contain information about time zones.  \n> Where it is not available from the underlying platform, Codat will return these as times local to the business whose data has been synced."
                                title: DateTime
                        connectionInfo:
                          type: object
                          properties:
                            additionalProp1:
                              type: string
                            additionalProp2:
                              type: string
                            additionalProp3:
                              type: string
                      required:
                        - id
                        - integrationId
                        - integrationKey
                        - sourceId
                        - platformName
                        - linkUrl
                        - status
                        - created
                        - sourceType
                      example:
                        id: ee2eb431-c0fa-4dc9-93fa-d29781c12bcd
                        integrationId: bf083d72-62c7-493e-aec9-81b4dbba7e2c
                        integrationKey: dfxm
                        sourceId: bdd831ce-eebd-4896-89a7-20e5ee8989ee
                        platformName: Basiq
                        linkUrl: 'https://link-api.codat.io/companies/86bd88cb-44ab-4dfb-b32f-87b19b14287f/connections/ee2eb431-c0fa-4dc9-93fa-d29781c12bcd/start'
                        status: Linked
                        lastSync: '2022-10-27T10:22:43.6464237Z'
                        created: '2022-10-27T09:53:29Z'
                        sourceType: Banking
                  pageNumber:
                    type: integer
                  pageSize:
                    type: integer
                  totalResults:
                    type: integer
                  _links:
                    type: object
                    required:
                      - self
                      - current
                    properties:
                      self:
                        title: Hypertext reference
                        type: object
                        properties:
                          href:
                            type: string
                            format: uri-reference
                      current:
                        title: Hypertext reference
                        type: object
                        properties:
                          href:
                            type: string
                            format: uri-reference
                      next:
                        title: Hypertext reference
                        type: object
                        properties:
                          href:
                            type: string
                            format: uri-reference
                      previous:
                        title: Hypertext reference
                        type: object
                        properties:
                          href:
                            type: string
                            format: uri-reference
                    examples:
                      - self:
                          href: '/companies/{id}/data/{dataType}'
                        current:
                          href: '/companies/{id}/data/{dataType}?page=1&pageSize=10'
              examples:
                example-1:
                  value:
                    results:
                      - id: ee2eb431-c0fa-4dc9-93fa-d29781c12bcd
                        integrationId: bf083d72-62c7-493e-aec9-81b4dbba7e2c
                        integrationKey: dfxm
                        sourceId: bdd831ce-eebd-4896-89a7-20e5ee8989ee
                        platformName: Basiq
                        linkUrl: 'https://link-api.codat.io/companies/86bd88cb-44ab-4dfb-b32f-87b19b14287f/connections/ee2eb431-c0fa-4dc9-93fa-d29781c12bcd/start'
                        status: Linked
                        lastSync: '2022-10-27T10:22:43.6464237Z'
                        created: '2022-10-27T09:53:29Z'
                        sourceType: Banking
                    pageNumber: 0
                    pageSize: 0
                    totalResults: 0
                    _links:
                      self:
                        href: string
                      current:
                        href: string
                      next:
                        href: string
                      previous:
                        href: string
        '400':
          description: Your `query` parameter was not correctly formed
          content:
            application/json:
              schema:
                title: Malformed-Query
                type: object
                properties:
                  statusCode:
                    type: integer
                  service:
                    type: string
                  error:
                    type: string
                  correlationId:
                    type: string
                  canBeRetried:
                    type: string
                  detailedErrorCode:
                    type: integer
                x-examples:
                  example-1:
                    statusCode: 400
                    service: ClientsApi
                    error: Error parsing query - Malformed query.
                    correlationId: bc997528a9d7abb9161ef45f05d38599
                    canBeRetried: Unknown
                    detailedErrorCode: 0
              examples:
                example-1:
                  value:
                    statusCode: 400
                    service: ClientsApi
                    error: Error parsing query - Malformed query.
                    correlationId: bc997528a9d7abb9161ef45f05d38599
                    canBeRetried: Unknown
                    detailedErrorCode: 0
        '401':
          description: Your API request was not properly authorized.
          content:
            application/json:
              schema:
                title: Unauthorized
                type: object
                properties:
                  statusCode:
                    type: integer
                  service:
                    type: string
                  error:
                    type: string
                  correlationId:
                    type: string
                  canBeRetried:
                    type: string
                  detailedErrorCode:
                    type: integer
                x-examples:
                  example-1:
                    statusCode: 401
                    service: PublicApi
                    error: Unauthorized
                    correlationId: 7eb40d6b415d7bcd99ce658268284056
                    canBeRetried: Unknown
                    detailedErrorCode: 0
              examples:
                example-1:
                  value:
                    statusCode: 401
                    service: PublicApi
                    error: Unauthorized
                    correlationId: 7eb40d6b415d7bcd99ce658268284056
                    canBeRetried: Unknown
                    detailedErrorCode: 0
    post:
      summary: Create a data connection
      description: Create a data connection for a company
      tags:
        - Connections
      operationId: create-data-connection
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                platformKey:
                  type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: Connection
                description: A connection represents the link between a `company` and a source of data.
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                    example: 2e9d2c44-f675-40ba-8049-353bfcb5e171
                    description: Unique identifier for a company's data connection.
                  integrationId:
                    type: string
                    format: uuid
                    example: fd321cb6-7963-4506-b873-e99593a45e30
                    description: A Codat ID representing the integration.
                  integrationKey:
                    type: string
                    description: A unique four-character ID that identifies the platform of the company's data connection. This ensures continuity if the platform changes its name in the future.
                  sourceId:
                    type: string
                    format: uuid
                    example: 35b92968-9851-4095-ad60-395c95cbcba4
                    description: 'A source-specific ID used to distinguish between different sources originating from the same data connection. In general, a data connection is a single data source. However, for TrueLayer, `sourceId` is associated with a specific bank and has a many-to-one relationship with the `integrationId`.'
                  sourceType:
                    title: Source Type
                    description: The type of platform of the connection.
                    type: string
                    enum:
                      - Accounting
                      - Banking
                      - Commerce
                      - Other
                      - Unknown
                    example: Accounting
                  platformName:
                    type: string
                  linkUrl:
                    type: string
                    format: uri
                    example: 'https://link-api.codat.io/companies/86bd88cb-44ab-4dfb-b32f-87b19b14287f/connections/2e2eb431-c1fa-4dc9-93fa-d29781c12bcd/start'
                  status:
                    title: Data connection status
                    description: The current authorization status of the data connection.
                    type: string
                    enum:
                      - PendingAuth
                      - Linked
                      - Unlinked
                      - Deauthorized
                  lastSync:
                    type: string
                    example: '2022-10-23T00:00:00Z'
                    description: "In Codat's data model, dates and times are represented using the <a class=\"external\" href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\">ISO 8601 standard</a>. Date and time fields are formatted as strings; for example:\n\n```\n2020-10-08T22:40:50Z\n2021-01-01T00:00:00\n```\n\n\n\nWhen syncing data that contains `DateTime` fields from Codat, make sure you support the following cases when reading time information:\n\n- Coordinated Universal Time (UTC): `2021-11-15T06:00:00Z`\n- Unqualified local time: `2021-11-15T01:00:00`\n- UTC time offsets: `2021-11-15T01:00:00-05:00`\n\n> \U0001F4D8 Time zones\n> \n> Not all dates from Codat will contain information about time zones.  \n> Where it is not available from the underlying platform, Codat will return these as times local to the business whose data has been synced."
                    title: DateTime
                  created:
                    type: string
                    example: '2022-10-23T00:00:00Z'
                    description: "In Codat's data model, dates and times are represented using the <a class=\"external\" href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\">ISO 8601 standard</a>. Date and time fields are formatted as strings; for example:\n\n```\n2020-10-08T22:40:50Z\n2021-01-01T00:00:00\n```\n\n\n\nWhen syncing data that contains `DateTime` fields from Codat, make sure you support the following cases when reading time information:\n\n- Coordinated Universal Time (UTC): `2021-11-15T06:00:00Z`\n- Unqualified local time: `2021-11-15T01:00:00`\n- UTC time offsets: `2021-11-15T01:00:00-05:00`\n\n> \U0001F4D8 Time zones\n> \n> Not all dates from Codat will contain information about time zones.  \n> Where it is not available from the underlying platform, Codat will return these as times local to the business whose data has been synced."
                    title: DateTime
                  dataConnectionErrors:
                    type: array
                    items:
                      type: object
                      properties:
                        statusCode:
                          type: string
                        statusText:
                          type: string
                        errorMessage:
                          type: string
                        erroredOnUtc:
                          type: string
                          example: '2022-10-23T00:00:00Z'
                          description: "In Codat's data model, dates and times are represented using the <a class=\"external\" href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\">ISO 8601 standard</a>. Date and time fields are formatted as strings; for example:\n\n```\n2020-10-08T22:40:50Z\n2021-01-01T00:00:00\n```\n\n\n\nWhen syncing data that contains `DateTime` fields from Codat, make sure you support the following cases when reading time information:\n\n- Coordinated Universal Time (UTC): `2021-11-15T06:00:00Z`\n- Unqualified local time: `2021-11-15T01:00:00`\n- UTC time offsets: `2021-11-15T01:00:00-05:00`\n\n> \U0001F4D8 Time zones\n> \n> Not all dates from Codat will contain information about time zones.  \n> Where it is not available from the underlying platform, Codat will return these as times local to the business whose data has been synced."
                          title: DateTime
                  connectionInfo:
                    type: object
                    properties:
                      additionalProp1:
                        type: string
                      additionalProp2:
                        type: string
                      additionalProp3:
                        type: string
                required:
                  - id
                  - integrationId
                  - integrationKey
                  - sourceId
                  - platformName
                  - linkUrl
                  - status
                  - created
                  - sourceType
                example:
                  id: ee2eb431-c0fa-4dc9-93fa-d29781c12bcd
                  integrationId: bf083d72-62c7-493e-aec9-81b4dbba7e2c
                  integrationKey: dfxm
                  sourceId: bdd831ce-eebd-4896-89a7-20e5ee8989ee
                  platformName: Basiq
                  linkUrl: 'https://link-api.codat.io/companies/86bd88cb-44ab-4dfb-b32f-87b19b14287f/connections/ee2eb431-c0fa-4dc9-93fa-d29781c12bcd/start'
                  status: Linked
                  lastSync: '2022-10-27T10:22:43.6464237Z'
                  created: '2022-10-27T09:53:29Z'
                  sourceType: Banking
              examples:
                example-1:
                  value:
                    id: ee2eb431-c0fa-4dc9-93fa-d29781c12bcd
                    integrationId: bf083d72-62c7-493e-aec9-81b4dbba7e2c
                    integrationKey: dfxm
                    sourceId: bdd831ce-eebd-4896-89a7-20e5ee8989ee
                    platformName: Basiq
                    linkUrl: 'https://link-api.codat.io/companies/86bd88cb-44ab-4dfb-b32f-87b19b14287f/connections/ee2eb431-c0fa-4dc9-93fa-d29781c12bcd/start'
                    status: Linked
                    lastSync: '2022-10-27T10:22:43.6464237Z'
                    created: '2022-10-27T09:53:29Z'
                    sourceType: Banking
webhooks:
  Company data connection status changed:
    post:
      requestBody:
        description: Triggered anytime a data connection's status changes.
        content:
          application/json:
            schema:
              title: Company data connection status changed webhook
              description: Webhook request body for a company's data connection status changed.
              type: object
              properties:
                companyId:
                  type: string
                  format: uuid
                  example: 8a210b68-6988-11ed-a1eb-0242ac120002
                  description: Unique identifier for your SMB in Codat.
                ruleId:
                  type: string
                  format: uuid
                  description: Unique identifier for the rule.
                ruleType:
                  type: string
                  x-stoplight:
                    id: 34d52a089f08a
                  description: The type of rule.
                alertId:
                  type: string
                  format: uuid
                  description: Unique identifier of the alert.
                message:
                  type: string
                  description: A human readable message about the webhook.
                data:
                  type: object
                  properties:
                    dataConnectionId:
                      type: string
                      format: uuid
                      example: 2e9d2c44-f675-40ba-8049-353bfcb5e171
                      description: Unique identifier for a company's data connection.
                    newStatus:
                      title: Data connection status
                      description: The current authorization status of the data connection.
                      type: string
                      enum:
                        - PendingAuth
                        - Linked
                        - Unlinked
                        - Deauthorized
                    oldStatus:
                      title: Data connection status
                      description: The current authorization status of the data connection.
                      type: string
                      enum:
                        - PendingAuth
                        - Linked
                        - Unlinked
                        - Deauthorized
                    platformKey:
                      type: string
                      minLength: 4
                      maxLength: 4
                      pattern: '[a-z]{4}'
                      example: gbol
                      description: '4 letter key for an integration. [Read more](https://docs.codat.io/integrations/accounting/accounting-platform-keys).'
              examples:
                - companyId: 8a210b68-6988-11ed-a1eb-0242ac120002
                  ruleId: 70af3071-65d9-4ec3-b3cb-5283e8d55dac
                  ruleType: DataConnectionStatusChanged
                  alertId: a9367074-b5c3-42c4-9be4-be129f43577e
                  message: Data connection for SandBox status changed from PendingAuth to Linked
                  data:
                    dataConnectionId: 2e9d2c44-f675-40ba-8049-353bfcb5e171
                    newStatus: Linked
                    oldStatus: PendingAuth
                    platformKey: gbol
      responses:
        '200':
          description: Return a 200 status to indicate that the webhook was received successfully.
  Data sync completed:
    post:
      requestBody:
        description: Triggered when a data synchronization is completed; a notification will be generated for each `dataType` as the sync completes.
        content:
          application/json:
            schema:
              title: Data sync complete webhook
              description: Webhook request body to notify the completion of a data sync.
              type: object
              properties:
                companyId:
                  type: string
                  format: uuid
                  example: 8a210b68-6988-11ed-a1eb-0242ac120002
                  description: Unique identifier for your SMB in Codat.
                clientId:
                  type: string
                  format: uuid
                  description: Unique identifier for your client in Codat.
                clientName:
                  type: string
                  description: Name of your client in Codat.
                dataConnectionId:
                  type: string
                  format: uuid
                  example: 2e9d2c44-f675-40ba-8049-353bfcb5e171
                  description: Unique identifier for a company's data connection.
                ruleId:
                  type: string
                  format: uuid
                  description: Unique identifier for the rule.
                ruleType:
                  type: string
                  x-stoplight:
                    id: 34d52a089f08a
                  description: The type of rule.
                alertId:
                  type: string
                  format: uuid
                  description: Unique identifier of the alert.
                message:
                  type: string
                  description: A human readable message about the webhook.
                data:
                  type: object
                  properties:
                    dataType:
                      type: string
                      description: Data type the sync completed for.
                    datasetId:
                      type: string
                      format: uuid
                      description: Unique identifier for the dataset that completed its sync.
              examples:
                - companyId: 8a210b68-6988-11ed-a1eb-0242ac120002
                  clientId: 5e505642-9024-474d-9434-e5a44f505cc5
                  clientName: string
                  dataConnectionId: 2e9d2c44-f675-40ba-8049-353bfcb5e171
                  ruleId: 70af3071-65d9-4ec3-b3cb-5283e8d55dac
                  ruleType: Data sync completed
                  alertId: a9367074-b5c3-42c4-9be4-be129f43577e
                  message: Data sync of type creditNotes completed for company 5e505642-9024-474d-9434-e5a44f505cc5
                  data:
                    dataType: creditNotes
                    datasetId: 6586f21b-ad4d-4d06-a309-712af47184a2
      responses:
        '200':
          description: Return a 200 status to indicate that the webhook was received successfully.
  Dataset data changed:
    post:
      requestBody:
        description: Triggered when a dataset synchronization has completed and this has resulted in updates within Codat's data cache - this could be through the creation of new records or a change to existing records.
        content:
          application/json:
            schema:
              title: Dataset data changed webhook
              description: Webhook request body to notify that a data synchronization has completed.
              type: object
              properties:
                companyId:
                  type: string
                  format: uuid
                  example: 8a210b68-6988-11ed-a1eb-0242ac120002
                  description: Unique identifier for your SMB in Codat.
                ruleId:
                  type: string
                  format: uuid
                  description: Unique identifier for the rule.
                ruleType:
                  type: string
                  x-stoplight:
                    id: 34d52a089f08a
                  description: The type of rule.
                alertId:
                  type: string
                  format: uuid
                  description: Unique identifier of the alert.
                message:
                  type: string
                  description: A human readable message about the webhook.
                data:
                  type: object
                  properties:
                    dataType:
                      type: string
                      description: Data type the sync completed for.
                    datasetId:
                      type: string
                      format: uuid
                      description: Unique identifier for the dataset that completed its sync.
              examples:
                - companyId: 8a210b68-6988-11ed-a1eb-0242ac120002
                  ruleId: 70af3071-65d9-4ec3-b3cb-5283e8d55dac
                  ruleType: Dataset data changed
                  alertId: a9367074-b5c3-42c4-9be4-be129f43577e
                  message: 'Data has changed for dataset type invoices, company 8a210b68-6988-11ed-a1eb-0242ac120002'
                  data:
                    dataType: invoices
                    datasetId: 6586f21b-ad4d-4d06-a309-712af47184a2
      responses:
        '200':
          description: Return a 200 status to indicate that the webhook was received successfully.
  Dataset status has changed to an error state:
    post:
      requestBody:
        description: Triggered when the synchronization of a dataset fails.
        content:
          application/json:
            schema:
              title: Dataset data error webhook
              description: Webhook request body to notify that a data synchronization has completed.
              type: object
              properties:
                companyId:
                  type: string
                  format: uuid
                  example: 8a210b68-6988-11ed-a1eb-0242ac120002
                  description: Unique identifier for your SMB in Codat.
                ruleId:
                  type: string
                  format: uuid
                  description: Unique identifier for the rule.
                ruleType:
                  type: string
                  x-stoplight:
                    id: 34d52a089f08a
                  description: The type of rule.
                alertId:
                  type: string
                  format: uuid
                  description: Unique identifier of the alert.
                message:
                  type: string
                  description: A human readable message about the webhook.
                data:
                  type: object
                  properties:
                    dataType:
                      type: string
                      description: Data type the sync completed for.
                    datasetStatus:
                      type: string
                      description: The current status of the dataset's sync.
                    datasetId:
                      type: string
                      format: uuid
                      description: Unique identifier for the dataset that completed its sync.
              examples:
                - companyId: 8a210b68-6988-11ed-a1eb-0242ac120002
                  ruleId: 70af3071-65d9-4ec3-b3cb-5283e8d55dac
                  ruleType: Data Sync Status Changed to Error
                  alertId: a9367074-b5c3-42c4-9be4-be129f43577e
                  message: 'ERROR: syncing payments triggered a ProcessingError notification at 2020-04-21T12:12:57.4250446Z.'
                  data:
                    dataType: payments
                    datasetStatus: ProcessingError
                    datasetId: 6586f21b-ad4d-4d06-a309-712af47184a2
      responses:
        '200':
          description: Return a 200 status to indicate that the webhook was received successfully.
  New company synchronized:
    post:
      requestBody:
        description: Triggered after a new company has successfully synchronized at least one dataType for the first time.
        content:
          application/json:
            schema:
              title: New company synchronized webhook
              description: Webhook request body to notify that a new company has successfully synchronized at least one dataType for the first time.
              type: object
              properties:
                companyId:
                  type: string
                  format: uuid
                  example: 8a210b68-6988-11ed-a1eb-0242ac120002
                  description: Unique identifier for your SMB in Codat.
                ruleId:
                  type: string
                  format: uuid
                  description: Unique identifier for the rule.
                ruleType:
                  type: string
                  x-stoplight:
                    id: 34d52a089f08a
                  description: The type of rule.
                alertId:
                  type: string
                  format: uuid
                  description: Unique identifier of the alert.
                message:
                  type: string
                  description: A human readable message about the webhook.
              examples:
                - companyId: 8a210b68-6988-11ed-a1eb-0242ac120002
                  ruleId: 70af3071-65d9-4ec3-b3cb-5283e8d55dac
                  ruleType: New company synchronised
                  alertId: a9367074-b5c3-42c4-9be4-be129f43577e
                  message: Company 8a210b68-6988-11ed-a1eb-0242ac120002 synced for the first time
      responses:
        '200':
          description: Return a 200 status to indicate that the webhook was received successfully.
  Push operation status has changed:
    post:
      requestBody:
        description: Triggered when a push operation's status changes.
        content:
          application/json:
            schema:
              title: Push operation status changed webhook
              description: Webhook request body for a push operation status change.
              type: object
              properties:
                companyId:
                  type: string
                  format: uuid
                  example: 8a210b68-6988-11ed-a1eb-0242ac120002
                  description: Unique identifier for your SMB in Codat.
                ruleId:
                  type: string
                  format: uuid
                  description: Unique identifier for the rule.
                ruleType:
                  type: string
                  x-stoplight:
                    id: 34d52a089f08a
                  description: The type of rule.
                alertId:
                  type: string
                  format: uuid
                  description: Unique identifier of the alert.
                message:
                  type: string
                  description: A human readable message about the webhook.
                data:
                  type: object
                  properties:
                    dataType:
                      type: string
                      description: Data type used in the push operation.
                    status:
                      type: string
                      description: The current status of the push operation.
                    pushOperationKey:
                      type: string
                      format: uuid
                      description: Unique identifier for the push operation.
              examples:
                - companyId: 8a210b68-6988-11ed-a1eb-0242ac120002
                  ruleId: 70af3071-65d9-4ec3-b3cb-5283e8d55dac
                  ruleType: Push Operation Status Changed
                  alertId: a9367074-b5c3-42c4-9be4-be129f43577e
                  message: 'invoices triggered notification for PushOperationStatusChanged at 2019-05-22T18:19:42.742Z'
                  data:
                    dataType: invoices
                    status: Success
                    pushOperationKey: c2f8847d-3047-4619-a157-6d947d8e4a73
      responses:
        '200':
          description: Return a 200 status to indicate that the webhook was received successfully.
  Push operation has timed out:
    post:
      requestBody:
        description: Triggered when a push operation times out.
        content:
          application/json:
            schema:
              title: Push operation timed out webhook
              description: Webhook request body notifying that a push push operation has timed out.
              type: object
              properties:
                companyId:
                  type: string
                  format: uuid
                  example: 8a210b68-6988-11ed-a1eb-0242ac120002
                  description: Unique identifier for your SMB in Codat.
                ruleId:
                  type: string
                  format: uuid
                  description: Unique identifier for the rule.
                ruleType:
                  type: string
                  x-stoplight:
                    id: 34d52a089f08a
                  description: The type of rule.
                alertId:
                  type: string
                  format: uuid
                  description: Unique identifier of the alert.
                message:
                  type: string
                  description: A human readable message about the webhook.
                data:
                  type: object
                  properties:
                    dataType:
                      type: string
                      description: Data type used in the push operation.
                    pushOperationKey:
                      type: string
                      format: uuid
                      description: Unique identifier for the push operation.
              examples:
                - companyId: 8a210b68-6988-11ed-a1eb-0242ac120002
                  ruleId: 70af3071-65d9-4ec3-b3cb-5283e8d55dac
                  ruleType: Push Operation Timed Out
                  alertId: a9367074-b5c3-42c4-9be4-be129f43577e
                  message: 'ERROR: pushing invoices never finished in time, timing out at 2020-09-07T08:42:13'
                  data:
                    dataType: invoices
                    pushOperationKey: c2f8847d-3047-4619-a157-6d947d8e4a73
      responses:
        '200':
          description: Return a 200 status to indicate that the webhook was received successfully.
components:
  schemas:
    Companies:
      title: Companies
      x-speakeasy-name-override: Companies
      x-internal: true
      allOf:
        - type: object
          properties:
            results:
              type: array
              items:
                title: Company
                description: 'A company in Codat represent a small or medium sized business, whose data you wish to share'
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                    example: 8a210b68-6988-11ed-a1eb-0242ac120002
                    description: Unique identifier for your SMB in Codat.
                  name:
                    type: string
                    description: The name of the company
                    example: Codat Ltd.
                  description:
                    type: string
                    description: 'Additional information about the company. This can be used to store foreign IDs, references, etc.'
                  platform:
                    type: string
                    deprecated: true
                    example: Xero
                  redirect:
                    type: string
                    format: uri
                    description: 'The `redirect` [Link URL](https://docs.codat.io/auth-flow/authorize-hosted-link) enabling the customer to start their auth flow journey for the company.'
                    example: 'https://link.codat.io/company/27628208-459c-46a2-a705-5641ce25f739'
                  lastSync:
                    type: string
                    example: '2022-10-23T00:00:00Z'
                    description: "In Codat's data model, dates and times are represented using the <a class=\"external\" href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\">ISO 8601 standard</a>. Date and time fields are formatted as strings; for example:\n\n```\n2020-10-08T22:40:50Z\n2021-01-01T00:00:00\n```\n\n\n\nWhen syncing data that contains `DateTime` fields from Codat, make sure you support the following cases when reading time information:\n\n- Coordinated Universal Time (UTC): `2021-11-15T06:00:00Z`\n- Unqualified local time: `2021-11-15T01:00:00`\n- UTC time offsets: `2021-11-15T01:00:00-05:00`\n\n> \U0001F4D8 Time zones\n> \n> Not all dates from Codat will contain information about time zones.  \n> Where it is not available from the underlying platform, Codat will return these as times local to the business whose data has been synced."
                    title: DateTime
                  created:
                    type: string
                    example: '2022-10-23T00:00:00Z'
                    description: "In Codat's data model, dates and times are represented using the <a class=\"external\" href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\">ISO 8601 standard</a>. Date and time fields are formatted as strings; for example:\n\n```\n2020-10-08T22:40:50Z\n2021-01-01T00:00:00\n```\n\n\n\nWhen syncing data that contains `DateTime` fields from Codat, make sure you support the following cases when reading time information:\n\n- Coordinated Universal Time (UTC): `2021-11-15T06:00:00Z`\n- Unqualified local time: `2021-11-15T01:00:00`\n- UTC time offsets: `2021-11-15T01:00:00-05:00`\n\n> \U0001F4D8 Time zones\n> \n> Not all dates from Codat will contain information about time zones.  \n> Where it is not available from the underlying platform, Codat will return these as times local to the business whose data has been synced."
                    title: DateTime
                  createdByUserName:
                    type: string
                  dataConnections:
                    type: array
                    items:
                      title: Connection
                      description: A connection represents the link between a `company` and a source of data.
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                          example: 2e9d2c44-f675-40ba-8049-353bfcb5e171
                          description: Unique identifier for a company's data connection.
                        integrationId:
                          type: string
                          format: uuid
                          example: fd321cb6-7963-4506-b873-e99593a45e30
                          description: A Codat ID representing the integration.
                        integrationKey:
                          type: string
                          description: A unique four-character ID that identifies the platform of the company's data connection. This ensures continuity if the platform changes its name in the future.
                        sourceId:
                          type: string
                          format: uuid
                          example: 35b92968-9851-4095-ad60-395c95cbcba4
                          description: 'A source-specific ID used to distinguish between different sources originating from the same data connection. In general, a data connection is a single data source. However, for TrueLayer, `sourceId` is associated with a specific bank and has a many-to-one relationship with the `integrationId`.'
                        sourceType:
                          title: Source Type
                          description: The type of platform of the connection.
                          type: string
                          enum:
                            - Accounting
                            - Banking
                            - Commerce
                            - Other
                            - Unknown
                          example: Accounting
                        platformName:
                          type: string
                        linkUrl:
                          type: string
                          format: uri
                          example: 'https://link-api.codat.io/companies/86bd88cb-44ab-4dfb-b32f-87b19b14287f/connections/2e2eb431-c1fa-4dc9-93fa-d29781c12bcd/start'
                        status:
                          title: Data connection status
                          description: The current authorization status of the data connection.
                          type: string
                          enum:
                            - PendingAuth
                            - Linked
                            - Unlinked
                            - Deauthorized
                        lastSync:
                          type: string
                          example: '2022-10-23T00:00:00Z'
                          description: "In Codat's data model, dates and times are represented using the <a class=\"external\" href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\">ISO 8601 standard</a>. Date and time fields are formatted as strings; for example:\n\n```\n2020-10-08T22:40:50Z\n2021-01-01T00:00:00\n```\n\n\n\nWhen syncing data that contains `DateTime` fields from Codat, make sure you support the following cases when reading time information:\n\n- Coordinated Universal Time (UTC): `2021-11-15T06:00:00Z`\n- Unqualified local time: `2021-11-15T01:00:00`\n- UTC time offsets: `2021-11-15T01:00:00-05:00`\n\n> \U0001F4D8 Time zones\n> \n> Not all dates from Codat will contain information about time zones.  \n> Where it is not available from the underlying platform, Codat will return these as times local to the business whose data has been synced."
                          title: DateTime
                        created:
                          type: string
                          example: '2022-10-23T00:00:00Z'
                          description: "In Codat's data model, dates and times are represented using the <a class=\"external\" href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\">ISO 8601 standard</a>. Date and time fields are formatted as strings; for example:\n\n```\n2020-10-08T22:40:50Z\n2021-01-01T00:00:00\n```\n\n\n\nWhen syncing data that contains `DateTime` fields from Codat, make sure you support the following cases when reading time information:\n\n- Coordinated Universal Time (UTC): `2021-11-15T06:00:00Z`\n- Unqualified local time: `2021-11-15T01:00:00`\n- UTC time offsets: `2021-11-15T01:00:00-05:00`\n\n> \U0001F4D8 Time zones\n> \n> Not all dates from Codat will contain information about time zones.  \n> Where it is not available from the underlying platform, Codat will return these as times local to the business whose data has been synced."
                          title: DateTime
                        dataConnectionErrors:
                          type: array
                          items:
                            type: object
                            properties:
                              statusCode:
                                type: string
                              statusText:
                                type: string
                              errorMessage:
                                type: string
                              erroredOnUtc:
                                type: string
                                example: '2022-10-23T00:00:00Z'
                                description: "In Codat's data model, dates and times are represented using the <a class=\"external\" href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\">ISO 8601 standard</a>. Date and time fields are formatted as strings; for example:\n\n```\n2020-10-08T22:40:50Z\n2021-01-01T00:00:00\n```\n\n\n\nWhen syncing data that contains `DateTime` fields from Codat, make sure you support the following cases when reading time information:\n\n- Coordinated Universal Time (UTC): `2021-11-15T06:00:00Z`\n- Unqualified local time: `2021-11-15T01:00:00`\n- UTC time offsets: `2021-11-15T01:00:00-05:00`\n\n> \U0001F4D8 Time zones\n> \n> Not all dates from Codat will contain information about time zones.  \n> Where it is not available from the underlying platform, Codat will return these as times local to the business whose data has been synced."
                                title: DateTime
                        connectionInfo:
                          type: object
                          properties:
                            additionalProp1:
                              type: string
                            additionalProp2:
                              type: string
                            additionalProp3:
                              type: string
                      required:
                        - id
                        - integrationId
                        - integrationKey
                        - sourceId
                        - platformName
                        - linkUrl
                        - status
                        - created
                        - sourceType
                      example:
                        id: ee2eb431-c0fa-4dc9-93fa-d29781c12bcd
                        integrationId: bf083d72-62c7-493e-aec9-81b4dbba7e2c
                        integrationKey: dfxm
                        sourceId: bdd831ce-eebd-4896-89a7-20e5ee8989ee
                        platformName: Basiq
                        linkUrl: 'https://link-api.codat.io/companies/86bd88cb-44ab-4dfb-b32f-87b19b14287f/connections/ee2eb431-c0fa-4dc9-93fa-d29781c12bcd/start'
                        status: Linked
                        lastSync: '2022-10-27T10:22:43.6464237Z'
                        created: '2022-10-27T09:53:29Z'
                        sourceType: Banking
                required:
                  - id
                  - name
                  - redirect
                examples:
                  - id: 0498e921-9b53-4396-a412-4f2f5983b0a2
                    name: string
                    platform: string
                    redirect: 'https://link.codat.io/company/27628208-459c-46a2-a705-5641ce25f739'
                    lastSync: '2022-01-01T12:00:00.000Z'
                    created: '2022-01-01T12:00:00.000Z'
                    createdByUserName: string
                    dataConnections:
                      - id: ee2eb431-c0fa-4dc9-93fa-d29781c12bcd
                        integrationId: bf083d72-62c7-493e-aec9-81b4dbba7e2c
                        integrationKey: dfxm
                        sourceId: bdd831ce-eebd-4896-89a7-20e5ee8989ee
                        platformName: Basiq
                        linkUrl: 'https://link-api.codat.io/companies/86bd88cb-44ab-4dfb-b32f-87b19b14287f/connections/ee2eb431-c0fa-4dc9-93fa-d29781c12bcd/start'
                        status: Linked
                        lastSync: '2022-10-27T10:22:43.6464237Z'
                        created: '2022-10-27T09:53:29Z'
                        sourceType: Banking
        - type: object
          properties:
            pageNumber:
              type: integer
            pageSize:
              type: integer
            totalResults:
              type: integer
            _links:
              type: object
              required:
                - self
                - current
              properties:
                self:
                  title: Hypertext reference
                  type: object
                  properties:
                    href:
                      type: string
                      format: uri-reference
                current:
                  title: Hypertext reference
                  type: object
                  properties:
                    href:
                      type: string
                      format: uri-reference
                next:
                  title: Hypertext reference
                  type: object
                  properties:
                    href:
                      type: string
                      format: uri-reference
                previous:
                  title: Hypertext reference
                  type: object
                  properties:
                    href:
                      type: string
                      format: uri-reference
              examples:
                - self:
                    href: '/companies/{id}/data/{dataType}'
                  current:
                    href: '/companies/{id}/data/{dataType}?page=1&pageSize=10'
          required:
            - pageNumber
            - pageSize
            - totalResults
            - _links
          examples:
            - _links:
                pageNumber: 1
                pageSize: 10
                totalResults: 1
                self:
                  href: '/companies/{id}/data/{dataType}'
                current:
                  href: '/companies/{id}/data/{dataType}?page=1&pageSize=10'
    Connections:
      title: Connections
      x-speakeasy-name-override: Connections
      x-internal: true
      type: object
      properties:
        results:
          type: array
          items:
            title: Connection
            description: A connection represents the link between a `company` and a source of data.
            type: object
            properties:
              id:
                type: string
                format: uuid
                example: 2e9d2c44-f675-40ba-8049-353bfcb5e171
                description: Unique identifier for a company's data connection.
              integrationId:
                type: string
                format: uuid
                example: fd321cb6-7963-4506-b873-e99593a45e30
                description: A Codat ID representing the integration.
              integrationKey:
                type: string
                description: A unique four-character ID that identifies the platform of the company's data connection. This ensures continuity if the platform changes its name in the future.
              sourceId:
                type: string
                format: uuid
                example: 35b92968-9851-4095-ad60-395c95cbcba4
                description: 'A source-specific ID used to distinguish between different sources originating from the same data connection. In general, a data connection is a single data source. However, for TrueLayer, `sourceId` is associated with a specific bank and has a many-to-one relationship with the `integrationId`.'
              sourceType:
                title: Source Type
                description: The type of platform of the connection.
                type: string
                enum:
                  - Accounting
                  - Banking
                  - Commerce
                  - Other
                  - Unknown
                example: Accounting
              platformName:
                type: string
              linkUrl:
                type: string
                format: uri
                example: 'https://link-api.codat.io/companies/86bd88cb-44ab-4dfb-b32f-87b19b14287f/connections/2e2eb431-c1fa-4dc9-93fa-d29781c12bcd/start'
              status:
                title: Data connection status
                description: The current authorization status of the data connection.
                type: string
                enum:
                  - PendingAuth
                  - Linked
                  - Unlinked
                  - Deauthorized
              lastSync:
                type: string
                example: '2022-10-23T00:00:00Z'
                description: "In Codat's data model, dates and times are represented using the <a class=\"external\" href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\">ISO 8601 standard</a>. Date and time fields are formatted as strings; for example:\n\n```\n2020-10-08T22:40:50Z\n2021-01-01T00:00:00\n```\n\n\n\nWhen syncing data that contains `DateTime` fields from Codat, make sure you support the following cases when reading time information:\n\n- Coordinated Universal Time (UTC): `2021-11-15T06:00:00Z`\n- Unqualified local time: `2021-11-15T01:00:00`\n- UTC time offsets: `2021-11-15T01:00:00-05:00`\n\n> \U0001F4D8 Time zones\n> \n> Not all dates from Codat will contain information about time zones.  \n> Where it is not available from the underlying platform, Codat will return these as times local to the business whose data has been synced."
                title: DateTime
              created:
                type: string
                example: '2022-10-23T00:00:00Z'
                description: "In Codat's data model, dates and times are represented using the <a class=\"external\" href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\">ISO 8601 standard</a>. Date and time fields are formatted as strings; for example:\n\n```\n2020-10-08T22:40:50Z\n2021-01-01T00:00:00\n```\n\n\n\nWhen syncing data that contains `DateTime` fields from Codat, make sure you support the following cases when reading time information:\n\n- Coordinated Universal Time (UTC): `2021-11-15T06:00:00Z`\n- Unqualified local time: `2021-11-15T01:00:00`\n- UTC time offsets: `2021-11-15T01:00:00-05:00`\n\n> \U0001F4D8 Time zones\n> \n> Not all dates from Codat will contain information about time zones.  \n> Where it is not available from the underlying platform, Codat will return these as times local to the business whose data has been synced."
                title: DateTime
              dataConnectionErrors:
                type: array
                items:
                  type: object
                  properties:
                    statusCode:
                      type: string
                    statusText:
                      type: string
                    errorMessage:
                      type: string
                    erroredOnUtc:
                      type: string
                      example: '2022-10-23T00:00:00Z'
                      description: "In Codat's data model, dates and times are represented using the <a class=\"external\" href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\">ISO 8601 standard</a>. Date and time fields are formatted as strings; for example:\n\n```\n2020-10-08T22:40:50Z\n2021-01-01T00:00:00\n```\n\n\n\nWhen syncing data that contains `DateTime` fields from Codat, make sure you support the following cases when reading time information:\n\n- Coordinated Universal Time (UTC): `2021-11-15T06:00:00Z`\n- Unqualified local time: `2021-11-15T01:00:00`\n- UTC time offsets: `2021-11-15T01:00:00-05:00`\n\n> \U0001F4D8 Time zones\n> \n> Not all dates from Codat will contain information about time zones.  \n> Where it is not available from the underlying platform, Codat will return these as times local to the business whose data has been synced."
                      title: DateTime
              connectionInfo:
                type: object
                properties:
                  additionalProp1:
                    type: string
                  additionalProp2:
                    type: string
                  additionalProp3:
                    type: string
            required:
              - id
              - integrationId
              - integrationKey
              - sourceId
              - platformName
              - linkUrl
              - status
              - created
              - sourceType
            example:
              id: ee2eb431-c0fa-4dc9-93fa-d29781c12bcd
              integrationId: bf083d72-62c7-493e-aec9-81b4dbba7e2c
              integrationKey: dfxm
              sourceId: bdd831ce-eebd-4896-89a7-20e5ee8989ee
              platformName: Basiq
              linkUrl: 'https://link-api.codat.io/companies/86bd88cb-44ab-4dfb-b32f-87b19b14287f/connections/ee2eb431-c0fa-4dc9-93fa-d29781c12bcd/start'
              status: Linked
              lastSync: '2022-10-27T10:22:43.6464237Z'
              created: '2022-10-27T09:53:29Z'
              sourceType: Banking
        pageNumber:
          type: integer
        pageSize:
          type: integer
        totalResults:
          type: integer
        _links:
          type: object
          required:
            - self
            - current
          properties:
            self:
              title: Hypertext reference
              type: object
              properties:
                href:
                  type: string
                  format: uri-reference
            current:
              title: Hypertext reference
              type: object
              properties:
                href:
                  type: string
                  format: uri-reference
            next:
              title: Hypertext reference
              type: object
              properties:
                href:
                  type: string
                  format: uri-reference
            previous:
              title: Hypertext reference
              type: object
              properties:
                href:
                  type: string
                  format: uri-reference
          examples:
            - self:
                href: '/companies/{id}/data/{dataType}'
              current:
                href: '/companies/{id}/data/{dataType}?page=1&pageSize=10'
    Links:
      type: object
      required:
        - self
        - current
      properties:
        self:
          title: Hypertext reference
          type: object
          properties:
            href:
              type: string
              format: uri-reference
        current:
          title: Hypertext reference
          type: object
          properties:
            href:
              type: string
              format: uri-reference
        next:
          title: Hypertext reference
          type: object
          properties:
            href:
              type: string
              format: uri-reference
        previous:
          title: Hypertext reference
          type: object
          properties:
            href:
              type: string
              format: uri-reference
      examples:
        - self:
            href: '/companies/{id}/data/{dataType}'
          current:
            href: '/companies/{id}/data/{dataType}?page=1&pageSize=10'
    Company:
      title: Company
      description: 'A company in Codat represent a small or medium sized business, whose data you wish to share'
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: 8a210b68-6988-11ed-a1eb-0242ac120002
          description: Unique identifier for your SMB in Codat.
        name:
          type: string
          description: The name of the company
          example: Codat Ltd.
        description:
          type: string
          description: 'Additional information about the company. This can be used to store foreign IDs, references, etc.'
        platform:
          type: string
          deprecated: true
          example: Xero
        redirect:
          type: string
          format: uri
          description: 'The `redirect` [Link URL](https://docs.codat.io/auth-flow/authorize-hosted-link) enabling the customer to start their auth flow journey for the company.'
          example: 'https://link.codat.io/company/27628208-459c-46a2-a705-5641ce25f739'
        lastSync:
          type: string
          example: '2022-10-23T00:00:00Z'
          description: "In Codat's data model, dates and times are represented using the <a class=\"external\" href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\">ISO 8601 standard</a>. Date and time fields are formatted as strings; for example:\n\n```\n2020-10-08T22:40:50Z\n2021-01-01T00:00:00\n```\n\n\n\nWhen syncing data that contains `DateTime` fields from Codat, make sure you support the following cases when reading time information:\n\n- Coordinated Universal Time (UTC): `2021-11-15T06:00:00Z`\n- Unqualified local time: `2021-11-15T01:00:00`\n- UTC time offsets: `2021-11-15T01:00:00-05:00`\n\n> \U0001F4D8 Time zones\n> \n> Not all dates from Codat will contain information about time zones.  \n> Where it is not available from the underlying platform, Codat will return these as times local to the business whose data has been synced."
          title: DateTime
        created:
          type: string
          example: '2022-10-23T00:00:00Z'
          description: "In Codat's data model, dates and times are represented using the <a class=\"external\" href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\">ISO 8601 standard</a>. Date and time fields are formatted as strings; for example:\n\n```\n2020-10-08T22:40:50Z\n2021-01-01T00:00:00\n```\n\n\n\nWhen syncing data that contains `DateTime` fields from Codat, make sure you support the following cases when reading time information:\n\n- Coordinated Universal Time (UTC): `2021-11-15T06:00:00Z`\n- Unqualified local time: `2021-11-15T01:00:00`\n- UTC time offsets: `2021-11-15T01:00:00-05:00`\n\n> \U0001F4D8 Time zones\n> \n> Not all dates from Codat will contain information about time zones.  \n> Where it is not available from the underlying platform, Codat will return these as times local to the business whose data has been synced."
          title: DateTime
        createdByUserName:
          type: string
        dataConnections:
          type: array
          items:
            title: Connection
            description: A connection represents the link between a `company` and a source of data.
            type: object
            properties:
              id:
                type: string
                format: uuid
                example: 2e9d2c44-f675-40ba-8049-353bfcb5e171
                description: Unique identifier for a company's data connection.
              integrationId:
                type: string
                format: uuid
                example: fd321cb6-7963-4506-b873-e99593a45e30
                description: A Codat ID representing the integration.
              integrationKey:
                type: string
                description: A unique four-character ID that identifies the platform of the company's data connection. This ensures continuity if the platform changes its name in the future.
              sourceId:
                type: string
                format: uuid
                example: 35b92968-9851-4095-ad60-395c95cbcba4
                description: 'A source-specific ID used to distinguish between different sources originating from the same data connection. In general, a data connection is a single data source. However, for TrueLayer, `sourceId` is associated with a specific bank and has a many-to-one relationship with the `integrationId`.'
              sourceType:
                title: Source Type
                description: The type of platform of the connection.
                type: string
                enum:
                  - Accounting
                  - Banking
                  - Commerce
                  - Other
                  - Unknown
                example: Accounting
              platformName:
                type: string
              linkUrl:
                type: string
                format: uri
                example: 'https://link-api.codat.io/companies/86bd88cb-44ab-4dfb-b32f-87b19b14287f/connections/2e2eb431-c1fa-4dc9-93fa-d29781c12bcd/start'
              status:
                title: Data connection status
                description: The current authorization status of the data connection.
                type: string
                enum:
                  - PendingAuth
                  - Linked
                  - Unlinked
                  - Deauthorized
              lastSync:
                type: string
                example: '2022-10-23T00:00:00Z'
                description: "In Codat's data model, dates and times are represented using the <a class=\"external\" href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\">ISO 8601 standard</a>. Date and time fields are formatted as strings; for example:\n\n```\n2020-10-08T22:40:50Z\n2021-01-01T00:00:00\n```\n\n\n\nWhen syncing data that contains `DateTime` fields from Codat, make sure you support the following cases when reading time information:\n\n- Coordinated Universal Time (UTC): `2021-11-15T06:00:00Z`\n- Unqualified local time: `2021-11-15T01:00:00`\n- UTC time offsets: `2021-11-15T01:00:00-05:00`\n\n> \U0001F4D8 Time zones\n> \n> Not all dates from Codat will contain information about time zones.  \n> Where it is not available from the underlying platform, Codat will return these as times local to the business whose data has been synced."
                title: DateTime
              created:
                type: string
                example: '2022-10-23T00:00:00Z'
                description: "In Codat's data model, dates and times are represented using the <a class=\"external\" href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\">ISO 8601 standard</a>. Date and time fields are formatted as strings; for example:\n\n```\n2020-10-08T22:40:50Z\n2021-01-01T00:00:00\n```\n\n\n\nWhen syncing data that contains `DateTime` fields from Codat, make sure you support the following cases when reading time information:\n\n- Coordinated Universal Time (UTC): `2021-11-15T06:00:00Z`\n- Unqualified local time: `2021-11-15T01:00:00`\n- UTC time offsets: `2021-11-15T01:00:00-05:00`\n\n> \U0001F4D8 Time zones\n> \n> Not all dates from Codat will contain information about time zones.  \n> Where it is not available from the underlying platform, Codat will return these as times local to the business whose data has been synced."
                title: DateTime
              dataConnectionErrors:
                type: array
                items:
                  type: object
                  properties:
                    statusCode:
                      type: string
                    statusText:
                      type: string
                    errorMessage:
                      type: string
                    erroredOnUtc:
                      type: string
                      example: '2022-10-23T00:00:00Z'
                      description: "In Codat's data model, dates and times are represented using the <a class=\"external\" href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\">ISO 8601 standard</a>. Date and time fields are formatted as strings; for example:\n\n```\n2020-10-08T22:40:50Z\n2021-01-01T00:00:00\n```\n\n\n\nWhen syncing data that contains `DateTime` fields from Codat, make sure you support the following cases when reading time information:\n\n- Coordinated Universal Time (UTC): `2021-11-15T06:00:00Z`\n- Unqualified local time: `2021-11-15T01:00:00`\n- UTC time offsets: `2021-11-15T01:00:00-05:00`\n\n> \U0001F4D8 Time zones\n> \n> Not all dates from Codat will contain information about time zones.  \n> Where it is not available from the underlying platform, Codat will return these as times local to the business whose data has been synced."
                      title: DateTime
              connectionInfo:
                type: object
                properties:
                  additionalProp1:
                    type: string
                  additionalProp2:
                    type: string
                  additionalProp3:
                    type: string
            required:
              - id
              - integrationId
              - integrationKey
              - sourceId
              - platformName
              - linkUrl
              - status
              - created
              - sourceType
            example:
              id: ee2eb431-c0fa-4dc9-93fa-d29781c12bcd
              integrationId: bf083d72-62c7-493e-aec9-81b4dbba7e2c
              integrationKey: dfxm
              sourceId: bdd831ce-eebd-4896-89a7-20e5ee8989ee
              platformName: Basiq
              linkUrl: 'https://link-api.codat.io/companies/86bd88cb-44ab-4dfb-b32f-87b19b14287f/connections/ee2eb431-c0fa-4dc9-93fa-d29781c12bcd/start'
              status: Linked
              lastSync: '2022-10-27T10:22:43.6464237Z'
              created: '2022-10-27T09:53:29Z'
              sourceType: Banking
      required:
        - id
        - name
        - redirect
      examples:
        - id: 0498e921-9b53-4396-a412-4f2f5983b0a2
          name: string
          platform: string
          redirect: 'https://link.codat.io/company/27628208-459c-46a2-a705-5641ce25f739'
          lastSync: '2022-01-01T12:00:00.000Z'
          created: '2022-01-01T12:00:00.000Z'
          createdByUserName: string
          dataConnections:
            - id: ee2eb431-c0fa-4dc9-93fa-d29781c12bcd
              integrationId: bf083d72-62c7-493e-aec9-81b4dbba7e2c
              integrationKey: dfxm
              sourceId: bdd831ce-eebd-4896-89a7-20e5ee8989ee
              platformName: Basiq
              linkUrl: 'https://link-api.codat.io/companies/86bd88cb-44ab-4dfb-b32f-87b19b14287f/connections/ee2eb431-c0fa-4dc9-93fa-d29781c12bcd/start'
              status: Linked
              lastSync: '2022-10-27T10:22:43.6464237Z'
              created: '2022-10-27T09:53:29Z'
              sourceType: Banking
    Connection:
      title: Connection
      description: A connection represents the link between a `company` and a source of data.
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: 2e9d2c44-f675-40ba-8049-353bfcb5e171
          description: Unique identifier for a company's data connection.
        integrationId:
          type: string
          format: uuid
          example: fd321cb6-7963-4506-b873-e99593a45e30
          description: A Codat ID representing the integration.
        integrationKey:
          type: string
          description: A unique four-character ID that identifies the platform of the company's data connection. This ensures continuity if the platform changes its name in the future.
        sourceId:
          type: string
          format: uuid
          example: 35b92968-9851-4095-ad60-395c95cbcba4
          description: 'A source-specific ID used to distinguish between different sources originating from the same data connection. In general, a data connection is a single data source. However, for TrueLayer, `sourceId` is associated with a specific bank and has a many-to-one relationship with the `integrationId`.'
        sourceType:
          title: Source Type
          description: The type of platform of the connection.
          type: string
          enum:
            - Accounting
            - Banking
            - Commerce
            - Other
            - Unknown
          example: Accounting
        platformName:
          type: string
        linkUrl:
          type: string
          format: uri
          example: 'https://link-api.codat.io/companies/86bd88cb-44ab-4dfb-b32f-87b19b14287f/connections/2e2eb431-c1fa-4dc9-93fa-d29781c12bcd/start'
        status:
          title: Data connection status
          description: The current authorization status of the data connection.
          type: string
          enum:
            - PendingAuth
            - Linked
            - Unlinked
            - Deauthorized
        lastSync:
          type: string
          example: '2022-10-23T00:00:00Z'
          description: "In Codat's data model, dates and times are represented using the <a class=\"external\" href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\">ISO 8601 standard</a>. Date and time fields are formatted as strings; for example:\n\n```\n2020-10-08T22:40:50Z\n2021-01-01T00:00:00\n```\n\n\n\nWhen syncing data that contains `DateTime` fields from Codat, make sure you support the following cases when reading time information:\n\n- Coordinated Universal Time (UTC): `2021-11-15T06:00:00Z`\n- Unqualified local time: `2021-11-15T01:00:00`\n- UTC time offsets: `2021-11-15T01:00:00-05:00`\n\n> \U0001F4D8 Time zones\n> \n> Not all dates from Codat will contain information about time zones.  \n> Where it is not available from the underlying platform, Codat will return these as times local to the business whose data has been synced."
          title: DateTime
        created:
          type: string
          example: '2022-10-23T00:00:00Z'
          description: "In Codat's data model, dates and times are represented using the <a class=\"external\" href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\">ISO 8601 standard</a>. Date and time fields are formatted as strings; for example:\n\n```\n2020-10-08T22:40:50Z\n2021-01-01T00:00:00\n```\n\n\n\nWhen syncing data that contains `DateTime` fields from Codat, make sure you support the following cases when reading time information:\n\n- Coordinated Universal Time (UTC): `2021-11-15T06:00:00Z`\n- Unqualified local time: `2021-11-15T01:00:00`\n- UTC time offsets: `2021-11-15T01:00:00-05:00`\n\n> \U0001F4D8 Time zones\n> \n> Not all dates from Codat will contain information about time zones.  \n> Where it is not available from the underlying platform, Codat will return these as times local to the business whose data has been synced."
          title: DateTime
        dataConnectionErrors:
          type: array
          items:
            type: object
            properties:
              statusCode:
                type: string
              statusText:
                type: string
              errorMessage:
                type: string
              erroredOnUtc:
                type: string
                example: '2022-10-23T00:00:00Z'
                description: "In Codat's data model, dates and times are represented using the <a class=\"external\" href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\">ISO 8601 standard</a>. Date and time fields are formatted as strings; for example:\n\n```\n2020-10-08T22:40:50Z\n2021-01-01T00:00:00\n```\n\n\n\nWhen syncing data that contains `DateTime` fields from Codat, make sure you support the following cases when reading time information:\n\n- Coordinated Universal Time (UTC): `2021-11-15T06:00:00Z`\n- Unqualified local time: `2021-11-15T01:00:00`\n- UTC time offsets: `2021-11-15T01:00:00-05:00`\n\n> \U0001F4D8 Time zones\n> \n> Not all dates from Codat will contain information about time zones.  \n> Where it is not available from the underlying platform, Codat will return these as times local to the business whose data has been synced."
                title: DateTime
        connectionInfo:
          type: object
          properties:
            additionalProp1:
              type: string
            additionalProp2:
              type: string
            additionalProp3:
              type: string
      required:
        - id
        - integrationId
        - integrationKey
        - sourceId
        - platformName
        - linkUrl
        - status
        - created
        - sourceType
      example:
        id: ee2eb431-c0fa-4dc9-93fa-d29781c12bcd
        integrationId: bf083d72-62c7-493e-aec9-81b4dbba7e2c
        integrationKey: dfxm
        sourceId: bdd831ce-eebd-4896-89a7-20e5ee8989ee
        platformName: Basiq
        linkUrl: 'https://link-api.codat.io/companies/86bd88cb-44ab-4dfb-b32f-87b19b14287f/connections/ee2eb431-c0fa-4dc9-93fa-d29781c12bcd/start'
        status: Linked
        lastSync: '2022-10-27T10:22:43.6464237Z'
        created: '2022-10-27T09:53:29Z'
        sourceType: Banking
    Integration:
      title: Integration
      description: An integration that Codat supports
      examples:
        - key: gbol
          logoUrl: 'http://example.com'
          name: Xero
          enabled: true
          sourceId: accounting
          sourceType: 8193a927-ab7a-45a3-9dc2-d357a4932dfe
          integrationId: 497a18ca-284e-40c0-985d-f72be35d468e
          isOfflineConnector: true
          isBeta: true
          dataProvidedBy: string
          datatypeFeatures:
            - datatype: invoices
              supportedFeatures:
                - featureType: get
                  featureState: release
      type: object
      properties:
        key:
          type: string
          minLength: 4
          maxLength: 4
          pattern: '[a-z]{4}'
          example: gbol
          description: '4 letter key for an integration. [Read more](https://docs.codat.io/integrations/accounting/accounting-platform-keys).'
        logoUrl:
          type: string
          format: uri
        name:
          type: string
          example: Xero
        enabled:
          type: boolean
          description: Whether this integration is enabled for your customers to use
        sourceId:
          type: string
          format: uuid
          example: 35b92968-9851-4095-ad60-395c95cbcba4
          description: 'A source-specific ID used to distinguish between different sources originating from the same data connection. In general, a data connection is a single data source. However, for TrueLayer, `sourceId` is associated with a specific bank and has a many-to-one relationship with the `integrationId`.'
        sourceType:
          title: Source Type
          description: The type of platform of the connection.
          type: string
          enum:
            - Accounting
            - Banking
            - Commerce
            - Other
            - Unknown
          example: Accounting
        integrationId:
          type: string
          format: uuid
          example: fd321cb6-7963-4506-b873-e99593a45e30
          description: A Codat ID representing the integration.
        isOfflineConnector:
          type: boolean
        isBeta:
          type: boolean
        dataProvidedBy:
          type: string
        datatypeFeatures:
          type: array
          items:
            title: DatatypeFeature
            description: Describes support for a given datatype and associated operations
            examples:
              - datatype: invoices
                supportedFeatures:
                  - featureType: get
                    featureState: release
            type: object
            x-stoplight:
              id: ry1x0fplpj8ck
            properties:
              datatype:
                type: string
              supportedFeatures:
                type: array
                items:
                  type: object
                  properties:
                    featureType:
                      type: string
                      enum:
                        - Get
                        - Post
                        - Categorization
                        - Delete
                        - Put
                        - GetAsPdf
                        - DownloadAttachment
                        - GetAttachment
                        - GetAttachments
                        - UploadAttachment
                      example: Get
                    featureState:
                      type: string
                      example: Release
                      enum:
                        - Release
                        - Beta
                        - Deprecated
                        - NotSupported
                        - NotImplemented
                  required:
                    - featureType
                    - featureState
            required:
              - datatype
              - supportedFeatures
      required:
        - key
        - logoUrl
        - name
        - enabled
    SyncSetting:
      title: SyncSetting
      description: 'Describes how often, and how much history, should be fetched for the given data type when a pull operation is queued.'
      examples:
        - dataType: invoices
          fetchOnFirstLink: true
          syncSchedule: 24
          syncOrder: 0
          syncFromUtc: '2020-01-01T12:00:00.000Z'
          syncFromWindow: 24
          monthsToSync: 24
          isLocked: true
      type: object
      properties:
        dataType:
          type: string
          example: invoices
        fetchOnFirstLink:
          type: boolean
          description: Whether this data type should be queued after a company has authorized a connection.
        syncSchedule:
          type: integer
          example: 24
          description: Number of hours after which this data type should be refreshed.
        syncOrder:
          type: integer
        syncFromUtc:
          description: Date from which data should be fetched. Set this *or* `syncFromWindow`
          type: string
          example: '2022-10-23T00:00:00Z'
          title: DateTime
        syncFromWindow:
          type: integer
          example: 24
          description: Number of months of data to be fetched. Set this *or* `syncFromUTC`
        monthsToSync:
          type: integer
          example: 24
          description: 'Months of data to fetch, for report data types (`balanceSheet` & `profitAndLoss`) only.'
        isLocked:
          type: boolean
      required:
        - dataType
        - fetchOnFirstLink
        - syncSchedule
        - syncOrder
      x-stoplight:
        id: dhbv5wyl1xr4w
    PullOperation:
      title: Pull Operation
      description: |-
        Information about a queued, in progress or completed pull operation.
        *Formally called `dataset`*
      x-stoplight:
        id: hvk8xbvt7ekyg
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: 943accd0-4247-42d8-865b-363c8629e1da
        companyId:
          type: string
          format: uuid
          example: 22ece347-e5f6-4896-95e0-35a4c7f17023
        connectionId:
          type: string
          format: uuid
          example: 50830828-7d39-4367-b0eb-5ddb2de5faa5
        dataType:
          type: string
        status:
          type: string
          enum:
            - Initial
            - Queued
            - Fetching
            - MapQueued
            - Mapping
            - Complete
            - FetchError
            - MapError
            - InternalError
            - ProcessingQueued
            - Processing
            - ProcessingError
            - ValidationQueued
            - Validating
            - ValidationError
            - AuthError
            - Cancelled
            - Routing
            - RoutingError
            - NotSupported
            - RateLimitError
            - PermissionsError
            - PrerequisiteNotMet
          example: Complete
        requested:
          type: string
          example: '2022-10-23T00:00:00Z'
          description: "In Codat's data model, dates and times are represented using the <a class=\"external\" href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\">ISO 8601 standard</a>. Date and time fields are formatted as strings; for example:\n\n```\n2020-10-08T22:40:50Z\n2021-01-01T00:00:00\n```\n\n\n\nWhen syncing data that contains `DateTime` fields from Codat, make sure you support the following cases when reading time information:\n\n- Coordinated Universal Time (UTC): `2021-11-15T06:00:00Z`\n- Unqualified local time: `2021-11-15T01:00:00`\n- UTC time offsets: `2021-11-15T01:00:00-05:00`\n\n> \U0001F4D8 Time zones\n> \n> Not all dates from Codat will contain information about time zones.  \n> Where it is not available from the underlying platform, Codat will return these as times local to the business whose data has been synced."
          title: DateTime
        progress:
          type: integer
        isCompleted:
          type: boolean
        isErrored:
          type: boolean
      required:
        - id
        - companyId
        - connectionId
        - dataType
        - status
        - requested
        - progress
        - isCompleted
        - isErrored
      examples:
        - id: 97d60846-f07a-4d42-b5a0-0bdcc6ebf56b
          companyId: 4645bd78-8988-45bc-ac9e-67ba5df6e4e5
          connectionId: 51baa045-4836-4317-a42e-3542e991e581
          dataType: invoices
          status: Initial
          requested: '2022-11-14T11:18:37.2798351Z'
          progress: 10
          isCompleted: false
          isErrored: false
    Rule:
      title: Webhook
      description: Configuration to alert to a url or list of email addresses based on the given type / condition.
      examples:
        - id: ff89c50e-a719-4ef5-a182-9917e53927b6
          type: string
          companyId: 39b73b17-cc2e-429e-915d-71654e9dcd1e
          notifiers:
            emails:
              - info@client.com
            webhook: 'https://webhook.client.com'
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: ff89c50e-a719-4ef5-a182-9917e53927b6
        type:
          type: string
        companyId:
          type: string
          format: uuid
          example: 39b73b17-cc2e-429e-915d-71654e9dcd1e
        notifiers:
          type: object
          properties:
            emails:
              type: array
              items:
                type: string
                format: email
                example: info@client.com
            webhook:
              type: string
              format: uri
              example: 'https://webhook.client.com'
      required:
        - id
        - type
        - notifiers
      x-stoplight:
        id: m6zh3ardbld2w
    DataStatus:
      title: DataStatus
      description: Describes the state of data in the Codat cache for a company and data type
      type: object
      required:
        - dataType
        - lastSuccessfulSync
        - currentStatus
      properties:
        dataType:
          type: string
        lastSuccessfulSync:
          type: string
          example: '2022-10-23T00:00:00Z'
          description: "In Codat's data model, dates and times are represented using the <a class=\"external\" href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\">ISO 8601 standard</a>. Date and time fields are formatted as strings; for example:\n\n```\n2020-10-08T22:40:50Z\n2021-01-01T00:00:00\n```\n\n\n\nWhen syncing data that contains `DateTime` fields from Codat, make sure you support the following cases when reading time information:\n\n- Coordinated Universal Time (UTC): `2021-11-15T06:00:00Z`\n- Unqualified local time: `2021-11-15T01:00:00`\n- UTC time offsets: `2021-11-15T01:00:00-05:00`\n\n> \U0001F4D8 Time zones\n> \n> Not all dates from Codat will contain information about time zones.  \n> Where it is not available from the underlying platform, Codat will return these as times local to the business whose data has been synced."
          title: DateTime
        currentStatus:
          type: string
        latestSyncId:
          type: string
          format: uuid
          example: ad474a37-2003-478e-baee-9af9f1ec2fe3
        latestSuccessfulSyncId:
          type: string
          format: uuid
          example: 8220fc90-55b6-47bc-9417-48ac6ea93101
      examples:
        - dataType: string
          lastSuccessfulSync: '2022-01-01T13:00:00.000Z'
          currentStatus: string
          latestSyncId: ad474a37-2003-478e-baee-9af9f1ec2fe3
          latestSuccessfulSyncId: 8220fc90-55b6-47bc-9417-48ac6ea93101
    Profile:
      title: Profile
      description: Describes your Codat client instance
      examples:
        - name: Bob's Burgers
          logoUrl: string
          iconUrl: string
          redirectUrl: string
          whiteListUrls:
            - 'https://bobs-burgers.com/redirect'
          apiKey: string
          alertAuthHeader: string
          confirmCompanyName: true
      type: object
      properties:
        name:
          type: string
          example: Bob's Burgers
        logoUrl:
          type: string
        iconUrl:
          type: string
        redirectUrl:
          type: string
        whiteListUrls:
          type: array
          items:
            type: string
            format: uri
            example: 'https://bobs-burgers.com/redirect'
        apiKey:
          type: string
          deprecated: true
        alertAuthHeader:
          type: string
        confirmCompanyName:
          type: boolean
          deprecated: true
      required:
        - name
        - redirectUrl
      x-stoplight:
        id: b1fyq05edangf
    Branding:
      title: Branding
      type: object
      properties:
        logo:
          description: Logo branding references.
          type: object
          properties:
            full:
              title: Branding Image
              type: object
              properties:
                image:
                  type: object
                  description: Image reference.
                  properties:
                    src:
                      type: string
                      format: uri
                      description: Source URL for image.
                    alt:
                      type: string
                      description: Alternative text when image is not available.
              examples: []
            square:
              title: Branding Image
              type: object
              properties:
                image:
                  type: object
                  description: Image reference.
                  properties:
                    src:
                      type: string
                      format: uri
                      description: Source URL for image.
                    alt:
                      type: string
                      description: Alternative text when image is not available.
              examples: []
        button:
          description: Button branding references.
          properties:
            default:
              title: Branding Image
              type: object
              properties:
                image:
                  type: object
                  description: Image reference.
                  properties:
                    src:
                      type: string
                      format: uri
                      description: Source URL for image.
                    alt:
                      type: string
                      description: Alternative text when image is not available.
              examples: []
            hover:
              title: Branding Image
              type: object
              properties:
                image:
                  type: object
                  description: Image reference.
                  properties:
                    src:
                      type: string
                      format: uri
                      description: Source URL for image.
                    alt:
                      type: string
                      description: Alternative text when image is not available.
              examples: []
        sourceId:
          type: string
          format: uuid
          example: 35b92968-9851-4095-ad60-395c95cbcba4
          description: 'A source-specific ID used to distinguish between different sources originating from the same data connection. In general, a data connection is a single data source. However, for TrueLayer, `sourceId` is associated with a specific bank and has a many-to-one relationship with the `integrationId`.'
      examples:
        - logo:
            full:
              image:
                src: 'https://static.codat.io/public/officialLogos/Full/8A156A5A-39CB-4F9D-856E-76EF9B9A9607.png'
                alt: xero full icon
            square:
              image:
                src: 'https://static.codat.io/public/officialLogos/Square/8A156A5A-39CB-4F9D-856E-76EF9B2W3607.png'
                alt: xero square icon
          button:
            default:
              image:
                src: 'https://static.codat.io/public/officialButtons/Full/8A156A5A-39CB-4F9D-856E-76EF9Q7A9607.png'
                alt: xero default button icon
            hover:
              image:
                src: 'https://static.codat.io/public/officialLogos/Full/8A156A5A-39CB-4F9D-856E-76EF9B9A9607.png'
                alt: xero hover button icon
          sourceId: 35b92968-9851-4095-ad60-395c95cbcba4
    DateTime:
      type: string
      example: '2022-10-23T00:00:00Z'
      description: "In Codat's data model, dates and times are represented using the <a class=\"external\" href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\">ISO 8601 standard</a>. Date and time fields are formatted as strings; for example:\n\n```\n2020-10-08T22:40:50Z\n2021-01-01T00:00:00\n```\n\n\n\nWhen syncing data that contains `DateTime` fields from Codat, make sure you support the following cases when reading time information:\n\n- Coordinated Universal Time (UTC): `2021-11-15T06:00:00Z`\n- Unqualified local time: `2021-11-15T01:00:00`\n- UTC time offsets: `2021-11-15T01:00:00-05:00`\n\n> \U0001F4D8 Time zones\n> \n> Not all dates from Codat will contain information about time zones.  \n> Where it is not available from the underlying platform, Codat will return these as times local to the business whose data has been synced."
      title: DateTime
    CompanyDataConnectionStatusChangedWebhook:
      title: Company data connection status changed webhook
      description: Webhook request body for a company's data connection status changed.
      type: object
      properties:
        companyId:
          type: string
          format: uuid
          example: 8a210b68-6988-11ed-a1eb-0242ac120002
          description: Unique identifier for your SMB in Codat.
        ruleId:
          type: string
          format: uuid
          description: Unique identifier for the rule.
        ruleType:
          type: string
          x-stoplight:
            id: 34d52a089f08a
          description: The type of rule.
        alertId:
          type: string
          format: uuid
          description: Unique identifier of the alert.
        message:
          type: string
          description: A human readable message about the webhook.
        data:
          type: object
          properties:
            dataConnectionId:
              type: string
              format: uuid
              example: 2e9d2c44-f675-40ba-8049-353bfcb5e171
              description: Unique identifier for a company's data connection.
            newStatus:
              title: Data connection status
              description: The current authorization status of the data connection.
              type: string
              enum:
                - PendingAuth
                - Linked
                - Unlinked
                - Deauthorized
            oldStatus:
              title: Data connection status
              description: The current authorization status of the data connection.
              type: string
              enum:
                - PendingAuth
                - Linked
                - Unlinked
                - Deauthorized
            platformKey:
              type: string
              minLength: 4
              maxLength: 4
              pattern: '[a-z]{4}'
              example: gbol
              description: '4 letter key for an integration. [Read more](https://docs.codat.io/integrations/accounting/accounting-platform-keys).'
      examples:
        - companyId: 8a210b68-6988-11ed-a1eb-0242ac120002
          ruleId: 70af3071-65d9-4ec3-b3cb-5283e8d55dac
          ruleType: DataConnectionStatusChanged
          alertId: a9367074-b5c3-42c4-9be4-be129f43577e
          message: Data connection for SandBox status changed from PendingAuth to Linked
          data:
            dataConnectionId: 2e9d2c44-f675-40ba-8049-353bfcb5e171
            newStatus: Linked
            oldStatus: PendingAuth
            platformKey: gbol
    DataSyncCompletedWebhook:
      title: Data sync complete webhook
      description: Webhook request body to notify the completion of a data sync.
      type: object
      properties:
        companyId:
          type: string
          format: uuid
          example: 8a210b68-6988-11ed-a1eb-0242ac120002
          description: Unique identifier for your SMB in Codat.
        clientId:
          type: string
          format: uuid
          description: Unique identifier for your client in Codat.
        clientName:
          type: string
          description: Name of your client in Codat.
        dataConnectionId:
          type: string
          format: uuid
          example: 2e9d2c44-f675-40ba-8049-353bfcb5e171
          description: Unique identifier for a company's data connection.
        ruleId:
          type: string
          format: uuid
          description: Unique identifier for the rule.
        ruleType:
          type: string
          x-stoplight:
            id: 34d52a089f08a
          description: The type of rule.
        alertId:
          type: string
          format: uuid
          description: Unique identifier of the alert.
        message:
          type: string
          description: A human readable message about the webhook.
        data:
          type: object
          properties:
            dataType:
              type: string
              description: Data type the sync completed for.
            datasetId:
              type: string
              format: uuid
              description: Unique identifier for the dataset that completed its sync.
      examples:
        - companyId: 8a210b68-6988-11ed-a1eb-0242ac120002
          clientId: 5e505642-9024-474d-9434-e5a44f505cc5
          clientName: string
          dataConnectionId: 2e9d2c44-f675-40ba-8049-353bfcb5e171
          ruleId: 70af3071-65d9-4ec3-b3cb-5283e8d55dac
          ruleType: Data sync completed
          alertId: a9367074-b5c3-42c4-9be4-be129f43577e
          message: Data sync of type creditNotes completed for company 5e505642-9024-474d-9434-e5a44f505cc5
          data:
            dataType: creditNotes
            datasetId: 6586f21b-ad4d-4d06-a309-712af47184a2
    DatasetDataChangedWebhook:
      title: Dataset data changed webhook
      description: Webhook request body to notify that a data synchronization has completed.
      type: object
      properties:
        companyId:
          type: string
          format: uuid
          example: 8a210b68-6988-11ed-a1eb-0242ac120002
          description: Unique identifier for your SMB in Codat.
        ruleId:
          type: string
          format: uuid
          description: Unique identifier for the rule.
        ruleType:
          type: string
          x-stoplight:
            id: 34d52a089f08a
          description: The type of rule.
        alertId:
          type: string
          format: uuid
          description: Unique identifier of the alert.
        message:
          type: string
          description: A human readable message about the webhook.
        data:
          type: object
          properties:
            dataType:
              type: string
              description: Data type the sync completed for.
            datasetId:
              type: string
              format: uuid
              description: Unique identifier for the dataset that completed its sync.
      examples:
        - companyId: 8a210b68-6988-11ed-a1eb-0242ac120002
          ruleId: 70af3071-65d9-4ec3-b3cb-5283e8d55dac
          ruleType: Dataset data changed
          alertId: a9367074-b5c3-42c4-9be4-be129f43577e
          message: 'Data has changed for dataset type invoices, company 8a210b68-6988-11ed-a1eb-0242ac120002'
          data:
            dataType: invoices
            datasetId: 6586f21b-ad4d-4d06-a309-712af47184a2
    NewCompanySynchronizedWebhook:
      title: New company synchronized webhook
      description: Webhook request body to notify that a new company has successfully synchronized at least one dataType for the first time.
      type: object
      properties:
        companyId:
          type: string
          format: uuid
          example: 8a210b68-6988-11ed-a1eb-0242ac120002
          description: Unique identifier for your SMB in Codat.
        ruleId:
          type: string
          format: uuid
          description: Unique identifier for the rule.
        ruleType:
          type: string
          x-stoplight:
            id: 34d52a089f08a
          description: The type of rule.
        alertId:
          type: string
          format: uuid
          description: Unique identifier of the alert.
        message:
          type: string
          description: A human readable message about the webhook.
      examples:
        - companyId: 8a210b68-6988-11ed-a1eb-0242ac120002
          ruleId: 70af3071-65d9-4ec3-b3cb-5283e8d55dac
          ruleType: New company synchronised
          alertId: a9367074-b5c3-42c4-9be4-be129f43577e
          message: Company 8a210b68-6988-11ed-a1eb-0242ac120002 synced for the first time
    PushOperationStatusChangedWebhook:
      title: Push operation status changed webhook
      description: Webhook request body for a push operation status change.
      type: object
      properties:
        companyId:
          type: string
          format: uuid
          example: 8a210b68-6988-11ed-a1eb-0242ac120002
          description: Unique identifier for your SMB in Codat.
        ruleId:
          type: string
          format: uuid
          description: Unique identifier for the rule.
        ruleType:
          type: string
          x-stoplight:
            id: 34d52a089f08a
          description: The type of rule.
        alertId:
          type: string
          format: uuid
          description: Unique identifier of the alert.
        message:
          type: string
          description: A human readable message about the webhook.
        data:
          type: object
          properties:
            dataType:
              type: string
              description: Data type used in the push operation.
            status:
              type: string
              description: The current status of the push operation.
            pushOperationKey:
              type: string
              format: uuid
              description: Unique identifier for the push operation.
      examples:
        - companyId: 8a210b68-6988-11ed-a1eb-0242ac120002
          ruleId: 70af3071-65d9-4ec3-b3cb-5283e8d55dac
          ruleType: Push Operation Status Changed
          alertId: a9367074-b5c3-42c4-9be4-be129f43577e
          message: 'invoices triggered notification for PushOperationStatusChanged at 2019-05-22T18:19:42.742Z'
          data:
            dataType: invoices
            status: Success
            pushOperationKey: c2f8847d-3047-4619-a157-6d947d8e4a73
    PushOperationTimedOutWebhook:
      title: Push operation timed out webhook
      description: Webhook request body notifying that a push push operation has timed out.
      type: object
      properties:
        companyId:
          type: string
          format: uuid
          example: 8a210b68-6988-11ed-a1eb-0242ac120002
          description: Unique identifier for your SMB in Codat.
        ruleId:
          type: string
          format: uuid
          description: Unique identifier for the rule.
        ruleType:
          type: string
          x-stoplight:
            id: 34d52a089f08a
          description: The type of rule.
        alertId:
          type: string
          format: uuid
          description: Unique identifier of the alert.
        message:
          type: string
          description: A human readable message about the webhook.
        data:
          type: object
          properties:
            dataType:
              type: string
              description: Data type used in the push operation.
            pushOperationKey:
              type: string
              format: uuid
              description: Unique identifier for the push operation.
      examples:
        - companyId: 8a210b68-6988-11ed-a1eb-0242ac120002
          ruleId: 70af3071-65d9-4ec3-b3cb-5283e8d55dac
          ruleType: Push Operation Timed Out
          alertId: a9367074-b5c3-42c4-9be4-be129f43577e
          message: 'ERROR: pushing invoices never finished in time, timing out at 2020-09-07T08:42:13'
          data:
            dataType: invoices
            pushOperationKey: c2f8847d-3047-4619-a157-6d947d8e4a73
    DatasetStatusChangedErrorWebhook:
      title: Dataset data error webhook
      description: Webhook request body to notify that a data synchronization has completed.
      type: object
      properties:
        companyId:
          type: string
          format: uuid
          example: 8a210b68-6988-11ed-a1eb-0242ac120002
          description: Unique identifier for your SMB in Codat.
        ruleId:
          type: string
          format: uuid
          description: Unique identifier for the rule.
        ruleType:
          type: string
          x-stoplight:
            id: 34d52a089f08a
          description: The type of rule.
        alertId:
          type: string
          format: uuid
          description: Unique identifier of the alert.
        message:
          type: string
          description: A human readable message about the webhook.
        data:
          type: object
          properties:
            dataType:
              type: string
              description: Data type the sync completed for.
            datasetStatus:
              type: string
              description: The current status of the dataset's sync.
            datasetId:
              type: string
              format: uuid
              description: Unique identifier for the dataset that completed its sync.
      examples:
        - companyId: 8a210b68-6988-11ed-a1eb-0242ac120002
          ruleId: 70af3071-65d9-4ec3-b3cb-5283e8d55dac
          ruleType: Data Sync Status Changed to Error
          alertId: a9367074-b5c3-42c4-9be4-be129f43577e
          message: 'ERROR: syncing payments triggered a ProcessingError notification at 2020-04-21T12:12:57.4250446Z.'
          data:
            dataType: payments
            datasetStatus: ProcessingError
            datasetId: 6586f21b-ad4d-4d06-a309-712af47184a2
  responses:
    Unauthorized:
      description: Your API request was not properly authorized.
      content:
        application/json:
          schema:
            title: Unauthorized
            type: object
            properties:
              statusCode:
                type: integer
              service:
                type: string
              error:
                type: string
              correlationId:
                type: string
              canBeRetried:
                type: string
              detailedErrorCode:
                type: integer
            x-examples:
              example-1:
                statusCode: 401
                service: PublicApi
                error: Unauthorized
                correlationId: 7eb40d6b415d7bcd99ce658268284056
                canBeRetried: Unknown
                detailedErrorCode: 0
          examples:
            example-1:
              value:
                statusCode: 401
                service: PublicApi
                error: Unauthorized
                correlationId: 7eb40d6b415d7bcd99ce658268284056
                canBeRetried: Unknown
                detailedErrorCode: 0
    Malformed-Query:
      description: Your `query` parameter was not correctly formed
      content:
        application/json:
          schema:
            title: Malformed-Query
            type: object
            properties:
              statusCode:
                type: integer
              service:
                type: string
              error:
                type: string
              correlationId:
                type: string
              canBeRetried:
                type: string
              detailedErrorCode:
                type: integer
            x-examples:
              example-1:
                statusCode: 400
                service: ClientsApi
                error: Error parsing query - Malformed query.
                correlationId: bc997528a9d7abb9161ef45f05d38599
                canBeRetried: Unknown
                detailedErrorCode: 0
          examples:
            example-1:
              value:
                statusCode: 400
                service: ClientsApi
                error: Error parsing query - Malformed query.
                correlationId: bc997528a9d7abb9161ef45f05d38599
                canBeRetried: Unknown
                detailedErrorCode: 0
    Not-Found:
      description: |-
        One or more of the resources you referenced could not be found.
        This might be because your company or data connection id is wrong, or was already deleted.
      content:
        application/json:
          schema:
            title: Not-Found
            type: object
            properties:
              statusCode:
                type: integer
              service:
                type: string
              error:
                type: string
              correlationId:
                type: string
              canBeRetried:
                type: string
              detailedErrorCode:
                type: integer
            x-examples:
              example-1:
                statusCode: 404
                service: PublicApi
                error: Data connection a22dd66b-564a-4832-9b37-7b3ce4aeb7de not found
                correlationId: 8fa2b5f4794970a4ee73758f612e8df0
                canBeRetried: Unknown
                detailedErrorCode: 0
          examples:
            Data connection not found:
              value:
                statusCode: 404
                service: PublicApi
                error: Data connection a22dd66b-564a-4832-9b37-7b3ce4aeb7de not found
                correlationId: 8fa2b5f4794970a4ee73758f612e8df0
                canBeRetried: Unknown
                detailedErrorCode: 0
            Company not found:
              value:
                statusCode: 404
                service: ClientsApi
                error: No company was found with ID 846ed55c-974b-4392-a1f1-87b6fdbf3c5e
                correlationId: 0a40c2f31fc8f992fb88b0853e4166f3
                canBeRetried: Unknown
                detailedErrorCode: 0
  parameters:
    dataType:
      name: dataType
      description: The key of a Codat data type
      in: path
      required: true
      schema:
        type: string
        description: Available Data types
        enum:
          - accountTransactions
          - balanceSheet
          - bankAccounts
          - bankTransactions
          - billCreditNotes
          - billPayments
          - bills
          - cashFlowStatement
          - chartOfAccounts
          - company
          - creditNotes
          - customers
          - directCosts
          - directIncomes
          - invoices
          - items
          - journalEntries
          - journals
          - paymentMethods
          - payments
          - profitAndLoss
          - purchaseOrders
          - salesOrders
          - suppliers
          - taxRates
          - trackingCategories
          - transfers
          - banking-accountBalances
          - banking-accounts
          - banking-transactionCategories
          - banking-transactions
          - commerce-companyInfo
          - commerce-customers
          - commerce-disputes
          - commerce-locations
          - commerce-orders
          - commerce-paymentMethods
          - commerce-payments
          - commerce-productCategories
          - commerce-products
          - commerce-taxComponents
          - commerce-transactions
        example: invoices
    ruleId:
      name: ruleId
      in: path
      required: true
      schema:
        type: string
        format: uuid
        example: 7318949f-c008-4936-a8ff-10d7ab563fa6
      description: Unique ID of the webhook or rule.
    datasetId:
      name: datasetId
      in: path
      required: true
      schema:
        type: string
        format: uuid
        example: eaed9f0f-e77b-4bc9-a58f-ab8b4b99ab18
      description: Unique ID of a dataset or pull operation.
    platformKey:
      name: platformKey
      in: path
      required: true
      schema:
        type: string
        minLength: 4
        maxLength: 4
        pattern: '[a-z]{4}'
        example: gbol
        description: '4 letter key for an integration. [Read more](https://docs.codat.io/integrations/accounting/accounting-platform-keys).'
  securitySchemes:
    auth_header:
      name: Authorization
      description: 'The word "Basic" followed by a space and your API Key, base64 encoded, which can be found [here](https://app.codat.io/developers/api-keys)'
      type: apiKey
      in: header
